{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"book-list\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Kitap adı, yazar veya tür ile ara\",\n    class: \"search-bar\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredBooks, book => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: book.id,\n      class: \"book-card\"\n    }, [_createElementVNode(\"img\", {\n      src: book.volumeInfo.imageLinks?.thumbnail,\n      alt: \"Book Cover\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString(book.volumeInfo.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(book.volumeInfo.authors?.join(', ')), 1 /* TEXT */), _createVNode(_component_router_link, {\n      to: '/book-details/' + book.id,\n      class: \"view-details\"\n    }, {\n      default: _withCtx(() => [...(_cache[1] || (_cache[1] = [_createTextVNode(\"Detayları Gör\")]))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","type","_cache","$event","$data","searchQuery","placeholder","_hoisted_1","_Fragment","_renderList","$options","filteredBooks","book","key","id","src","volumeInfo","imageLinks","thumbnail","alt","_hoisted_2","_toDisplayString","title","authors","join","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\components\\BooksList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Kitap adı, yazar veya tür ile ara\"\r\n        class=\"search-bar\"\r\n      />\r\n      <div class=\"book-list\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <img :src=\"book.volumeInfo.imageLinks?.thumbnail\" alt=\"Book Cover\" />\r\n          <div>\r\n            <h3>{{ book.volumeInfo.title }}</h3>\r\n            <p>{{ book.volumeInfo.authors?.join(', ') }}</p>\r\n            <router-link :to=\"'/book-details/' + book.id\" class=\"view-details\">Detayları Gör</router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        searchQuery: '',\r\n        books: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchBooks(); // API'den kitapları çekme\r\n    },\r\n    methods: {\r\n      async fetchBooks() {\r\n        try {\r\n          const response = await axios.get('API_ENDPOINT_HERE'); // Buraya API URL'nizi yazın\r\n          this.books = response.data.items; // API'den gelen kitapları `books` dizisine atıyoruz\r\n        } catch (error) {\r\n          console.error('API çağrısı sırasında bir hata oluştu:', error);\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      filteredBooks() {\r\n        if (!this.searchQuery) {\r\n          return this.books; // Eğer arama kutusu boşsa, tüm kitapları göster\r\n        }\r\n        return this.books.filter(book => {\r\n          // Arama kutusundaki değere göre kitapları filtrele\r\n          return (\r\n            book.volumeInfo.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            (book.volumeInfo.authors && book.volumeInfo.authors.join(', ').toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n          );\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .search-bar {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .book-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .book-card {\r\n    width: 200px;\r\n    margin: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .book-card img {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .view-details {\r\n    display: block;\r\n    margin-top: 10px;\r\n    text-decoration: none;\r\n    color: #007bff;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAQWA,KAAK,EAAC;AAAW;mBAR5B;;;uBACIC,mBAAA,CAiBM,c,gBAhBJC,mBAAA,CAKE;IAJAC,IAAI,EAAC,MAAM;IAHnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,WAAW,EAAC,mCAAmC;IAC/CR,KAAK,EAAC;iDAFGM,KAAA,CAAAC,WAAW,E,GAItBL,mBAAA,CASM,OATNO,UASM,I,kBARJR,mBAAA,CAOMS,SAAA,QAhBdC,WAAA,CAS4BC,QAAA,CAAAC,aAAa,EAArBC,IAAI;yBAAhBb,mBAAA,CAOM;MAP8Bc,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEhB,KAAK,EAAC;QACtDE,mBAAA,CAAqE;MAA/De,GAAG,EAAEH,IAAI,CAACI,UAAU,CAACC,UAAU,EAAEC,SAAS;MAAEC,GAAG,EAAC;4BAVhEC,UAAA,GAWUpB,mBAAA,CAIM,cAHJA,mBAAA,CAAoC,YAAAqB,gBAAA,CAA7BT,IAAI,CAACI,UAAU,CAACM,KAAK,kBAC5BtB,mBAAA,CAAgD,WAAAqB,gBAAA,CAA1CT,IAAI,CAACI,UAAU,CAACO,OAAO,EAAEC,IAAI,wBACnCC,YAAA,CAA8FC,sBAAA;MAAhFC,EAAE,qBAAqBf,IAAI,CAACE,EAAE;MAAEhB,KAAK,EAAC;;MAdhE8B,OAAA,EAAAC,QAAA,CAc+E,MAAa,KAAA3B,MAAA,QAAAA,MAAA,OAd5F4B,gBAAA,CAc+E,eAAa,E;MAd5FC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}