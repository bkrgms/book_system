{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport axios from 'axios';\nimport { getCurrentInstance } from 'vue';\nexport default {\n  data() {\n    return {\n      books: [],\n      allBooks: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      itemsPerPage: 20\n    };\n  },\n  setup() {\n    const app = getCurrentInstance();\n    const emitter = app.appContext.config.globalProperties.emitter;\n    return {\n      emitter\n    };\n  },\n  computed: {\n    filteredBooks() {\n      // Admin panelinden gelen kitapları da dahil et\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n      const searchResults = uniqueBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return searchResults.slice(start, end);\n    },\n    totalPages() {\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n      const searchResults = uniqueBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      return Math.ceil(searchResults.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    // Kitapları birleştiren ve tekrarları önleyen method\n    mergeBooks(apiBooks, adminBooks) {\n      const allBooks = [...apiBooks];\n\n      // Admin kitaplarını kontrol et ve sadece benzersiz olanları ekle\n      adminBooks.forEach(adminBook => {\n        const exists = allBooks.some(book => book.title.toLowerCase() === adminBook.title.toLowerCase() && book.author.toLowerCase() === adminBook.author.toLowerCase());\n        if (!exists) {\n          allBooks.push(adminBook);\n        }\n      });\n      return allBooks;\n    },\n    async fetchBooks() {\n      try {\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=classic+literature&maxResults=34\");\n        const rawBooks = response.data.items || [];\n        this.allBooks = rawBooks.filter(item => item.volumeInfo.imageLinks).map((item, index) => ({\n          id: index + 1,\n          // Sayısal ID'ler\n          title: item.volumeInfo.title || \"Bilinmeyen Başlık\",\n          author: item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\",\n          image: item.volumeInfo.imageLinks.thumbnail\n        })).slice(0, 34);\n        this.books = [...this.allBooks];\n      } catch (error) {\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    logout() {\n      this.$router.push(\"/\");\n    },\n    // Kitapları yeniden yükleme metodu\n    refreshBooks() {\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n      this.books = uniqueBooks;\n    }\n  },\n  mounted() {\n    this.fetchBooks();\n\n    // Admin panelinden gelen güncellemeleri dinle\n    this.emitter.on('books-updated', () => {\n      this.refreshBooks();\n    });\n  },\n  unmounted() {\n    // Component unmount olduğunda event listener'ı temizle\n    this.emitter.off('books-updated');\n  }\n};","map":{"version":3,"names":["axios","getCurrentInstance","data","books","allBooks","searchQuery","currentPage","itemsPerPage","setup","app","emitter","appContext","config","globalProperties","computed","filteredBooks","adminBooks","JSON","parse","localStorage","getItem","uniqueBooks","mergeBooks","searchResults","filter","book","title","toLowerCase","includes","author","start","end","slice","totalPages","Math","ceil","length","methods","apiBooks","forEach","adminBook","exists","some","push","fetchBooks","response","get","rawBooks","items","item","volumeInfo","imageLinks","map","index","id","authors","image","thumbnail","error","console","prevPage","nextPage","logout","$router","refreshBooks","mounted","on","unmounted","off"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button class=\"page-button\" :disabled=\"currentPage === 1\" @click=\"prevPage\">\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"page-button\" :disabled=\"currentPage === totalPages\" @click=\"nextPage\">\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n    };\r\n  },\r\n  setup() {\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    return { emitter };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      // Admin panelinden gelen kitapları da dahil et\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      \r\n      const searchResults = uniqueBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      \r\n      const searchResults = uniqueBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n      return Math.ceil(searchResults.length / this.itemsPerPage);\r\n    }\r\n  },\r\n  methods: {\r\n    // Kitapları birleştiren ve tekrarları önleyen method\r\n    mergeBooks(apiBooks, adminBooks) {\r\n      const allBooks = [...apiBooks];\r\n      \r\n      // Admin kitaplarını kontrol et ve sadece benzersiz olanları ekle\r\n      adminBooks.forEach(adminBook => {\r\n        const exists = allBooks.some(book => \r\n          book.title.toLowerCase() === adminBook.title.toLowerCase() &&\r\n          book.author.toLowerCase() === adminBook.author.toLowerCase()\r\n        );\r\n        \r\n        if (!exists) {\r\n          allBooks.push(adminBook);\r\n        }\r\n      });\r\n      \r\n      return allBooks;\r\n    },\r\n    async fetchBooks() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=classic+literature&maxResults=34\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        this.allBooks = rawBooks\r\n          .filter((item) => item.volumeInfo.imageLinks)\r\n          .map((item, index) => ({\r\n            id: index + 1, // Sayısal ID'ler\r\n            title: item.volumeInfo.title || \"Bilinmeyen Başlık\",\r\n            author: item.volumeInfo.authors\r\n              ? item.volumeInfo.authors[0]\r\n              : \"Bilinmeyen Yazar\",\r\n            image: item.volumeInfo.imageLinks.thumbnail,\r\n          }))\r\n          .slice(0, 34);\r\n        this.books = [...this.allBooks];\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n    // Kitapları yeniden yükleme metodu\r\n    refreshBooks() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      this.books = uniqueBooks;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks();\r\n    \r\n    // Admin panelinden gelen güncellemeleri dinle\r\n    this.emitter.on('books-updated', () => {\r\n      this.refreshBooks();\r\n    });\r\n  },\r\n  unmounted() {\r\n    // Component unmount olduğunda event listener'ı temizle\r\n    this.emitter.off('books-updated');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}