{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n  constructor(channelControlHelper, credentials, options) {\n    this.channelControlHelper = channelControlHelper;\n    this.credentials = credentials;\n    this.options = options;\n    this.currentChild = null;\n    this.pendingChild = null;\n    this.latestConfig = null;\n    this.ChildPolicyHelper = class {\n      constructor(parent) {\n        this.parent = parent;\n        this.child = null;\n      }\n      createSubchannel(subchannelAddress, subchannelArgs, credentialsOverride) {\n        return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs, credentialsOverride);\n      }\n      updateState(connectivityState, picker) {\n        var _a;\n        if (this.calledByPendingChild()) {\n          if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n            return;\n          }\n          (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n          this.parent.currentChild = this.parent.pendingChild;\n          this.parent.pendingChild = null;\n        } else if (!this.calledByCurrentChild()) {\n          return;\n        }\n        this.parent.channelControlHelper.updateState(connectivityState, picker);\n      }\n      requestReresolution() {\n        var _a;\n        const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n        if (this.child === latestChild) {\n          this.parent.channelControlHelper.requestReresolution();\n        }\n      }\n      setChild(newChild) {\n        this.child = newChild;\n      }\n      addChannelzChild(child) {\n        this.parent.channelControlHelper.addChannelzChild(child);\n      }\n      removeChannelzChild(child) {\n        this.parent.channelControlHelper.removeChannelzChild(child);\n      }\n      calledByPendingChild() {\n        return this.child === this.parent.pendingChild;\n      }\n      calledByCurrentChild() {\n        return this.child === this.parent.currentChild;\n      }\n    };\n  }\n  configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n    return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n  }\n  /**\n   * Prerequisites: lbConfig !== null and lbConfig.name is registered\n   * @param endpointList\n   * @param lbConfig\n   * @param attributes\n   */\n  updateAddressList(endpointList, lbConfig, attributes) {\n    let childToUpdate;\n    if (this.currentChild === null || this.latestConfig === null || this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n      const newHelper = new this.ChildPolicyHelper(this);\n      const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper, this.credentials, this.options);\n      newHelper.setChild(newChild);\n      if (this.currentChild === null) {\n        this.currentChild = newChild;\n        childToUpdate = this.currentChild;\n      } else {\n        if (this.pendingChild) {\n          this.pendingChild.destroy();\n        }\n        this.pendingChild = newChild;\n        childToUpdate = this.pendingChild;\n      }\n    } else {\n      if (this.pendingChild === null) {\n        childToUpdate = this.currentChild;\n      } else {\n        childToUpdate = this.pendingChild;\n      }\n    }\n    this.latestConfig = lbConfig;\n    childToUpdate.updateAddressList(endpointList, lbConfig, attributes);\n  }\n  exitIdle() {\n    if (this.currentChild) {\n      this.currentChild.exitIdle();\n      if (this.pendingChild) {\n        this.pendingChild.exitIdle();\n      }\n    }\n  }\n  resetBackoff() {\n    if (this.currentChild) {\n      this.currentChild.resetBackoff();\n      if (this.pendingChild) {\n        this.pendingChild.resetBackoff();\n      }\n    }\n  }\n  destroy() {\n    /* Note: state updates are only propagated from the child balancer if that\n     * object is equal to this.currentChild or this.pendingChild. Since this\n     * function sets both of those to null, no further state updates will\n     * occur after this function returns. */\n    if (this.currentChild) {\n      this.currentChild.destroy();\n      this.currentChild = null;\n    }\n    if (this.pendingChild) {\n      this.pendingChild.destroy();\n      this.pendingChild = null;\n    }\n  }\n  getTypeName() {\n    return TYPE_NAME;\n  }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;","map":{"version":3,"names":["load_balancer_1","require","connectivity_state_1","TYPE_NAME","ChildLoadBalancerHandler","constructor","channelControlHelper","credentials","options","currentChild","pendingChild","latestConfig","ChildPolicyHelper","parent","child","createSubchannel","subchannelAddress","subchannelArgs","credentialsOverride","updateState","connectivityState","picker","calledByPendingChild","ConnectivityState","CONNECTING","_a","destroy","calledByCurrentChild","requestReresolution","latestChild","setChild","newChild","addChannelzChild","removeChannelzChild","configUpdateRequiresNewPolicyInstance","oldConfig","newConfig","getLoadBalancerName","updateAddressList","endpointList","lbConfig","attributes","childToUpdate","newHelper","createLoadBalancer","exitIdle","resetBackoff","getTypeName","exports"],"sources":["../../src/load-balancer-child-handler.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}