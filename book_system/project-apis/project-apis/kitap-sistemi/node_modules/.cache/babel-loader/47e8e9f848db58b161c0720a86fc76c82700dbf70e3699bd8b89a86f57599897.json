{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"book-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Kitaplar\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Yükleniyor...\")) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.books, book => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: book.id\n    }, [_createVNode(_component_router_link, {\n      to: `/book/${book.id}`\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(book.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","_hoisted_3","_Fragment","_renderList","books","book","id","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_toDisplayString","title","_"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\components\\BooksList.vue"],"sourcesContent":["<template>\r\n    <div class=\"book-list\">\r\n      <h1>Kitaplar</h1>\r\n      <div v-if=\"loading\">Yükleniyor...</div>\r\n      <ul v-else>\r\n        <li v-for=\"book in books\" :key=\"book.id\">\r\n          <router-link :to=\"`/book/${book.id}`\">{{ book.title }}</router-link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        books: [],      // Kitaplar\r\n        loading: true,  // Yükleme durumu\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchBooks(); // Sayfa oluşturulduğunda kitapları al\r\n    },\r\n    methods: {\r\n      fetchBooks() {\r\n        axios\r\n          .get(\"https://www.googleapis.com/books/v1/volumes?q=javascript\")  // Google Books API örneği\r\n          .then((response) => {\r\n            this.books = response.data.items;  // API'den gelen kitapları al\r\n            this.loading = false;  // Yükleme tamamlandı\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"API Hatası:\", error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .book-list {\r\n    font-family: Arial, sans-serif;\r\n  }\r\n  \r\n  .book-list h1 {\r\n    text-align: center;\r\n  }\r\n  \r\n  .book-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .book-list li {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  \r\n  .book-list li a {\r\n    text-decoration: none;\r\n    color: #333;\r\n  }\r\n  \r\n  .book-list li a:hover {\r\n    color: #007bff;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAD1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACIC,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAAiB,YAAb,UAAQ,sBACDC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAAuC,OAH7CK,UAAA,EAG0B,eAAa,M,cACjCL,mBAAA,CAIK,MARXM,UAAA,I,kBAKQN,mBAAA,CAEKO,SAAA,QAPbC,WAAA,CAK2BL,KAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAfV,mBAAA,CAEK;MAFsBD,GAAG,EAAEW,IAAI,CAACC;QACnCC,YAAA,CAAoEC,sBAAA;MAAtDC,EAAE,WAAWJ,IAAI,CAACC,EAAE;;MAN5CI,OAAA,EAAAC,QAAA,CAMgD,MAAgB,CANhEC,gBAAA,CAAAC,gBAAA,CAMmDR,IAAI,CAACS,KAAK,iB;MAN7DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}