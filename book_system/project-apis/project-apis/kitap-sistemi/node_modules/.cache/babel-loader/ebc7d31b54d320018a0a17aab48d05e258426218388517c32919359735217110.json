{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'BookReviews',\n  props: {\n    bookId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      reviews: [],\n      newReview: {\n        rating: 0,\n        comment: ''\n      },\n      isLoggedIn: true // Gerçek auth sistemine göre değiştirilmeli\n    };\n  },\n  methods: {\n    async fetchReviews() {\n      try {\n        const response = await axios.get(`http://localhost:8001/reviews/${this.bookId}`);\n        this.reviews = response.data.reviews || [];\n      } catch (error) {\n        console.error('Yorumlar alınamadı:', error);\n      }\n    },\n    async submitReview() {\n      if (this.newReview.rating === 0) {\n        alert('Lütfen bir puan verin');\n        return;\n      }\n      try {\n        await axios.post('http://localhost:8001/reviews/add', {\n          bookId: this.bookId,\n          userId: 'user1',\n          rating: this.newReview.rating,\n          comment: this.newReview.comment\n        });\n        this.newReview.rating = 0;\n        this.newReview.comment = '';\n        await this.fetchReviews();\n        alert('Yorumunuz başarıyla eklendi!');\n      } catch (error) {\n        console.error('Yorum eklenemedi:', error);\n        alert('Yorum eklenirken bir hata oluştu!');\n      }\n    },\n    formatDate(dateStr) {\n      return new Date(dateStr).toLocaleDateString('tr-TR');\n    }\n  },\n  mounted() {\n    this.fetchReviews();\n  }\n};","map":{"version":3,"names":["axios","name","props","bookId","type","String","required","data","reviews","newReview","rating","comment","isLoggedIn","methods","fetchReviews","response","get","error","console","submitReview","alert","post","userId","formatDate","dateStr","Date","toLocaleDateString","mounted"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\components\\BookReviews.vue"],"sourcesContent":["<template>\r\n  <div class=\"reviews-section\">\r\n    <h3>Yorumlar</h3>\r\n    \r\n    <!-- Yorum Ekleme Formu -->\r\n    <div class=\"review-form\" v-if=\"isLoggedIn\">\r\n      <div class=\"rating\">\r\n        <span \r\n          v-for=\"star in 5\" \r\n          :key=\"star\"\r\n          :class=\"{ active: star <= newReview.rating }\"\r\n          @click=\"newReview.rating = star\"\r\n        >★</span>\r\n      </div>\r\n      <textarea \r\n        v-model=\"newReview.comment\"\r\n        placeholder=\"Yorumunuzu yazın...\"\r\n      ></textarea>\r\n      <button @click=\"submitReview\">Yorum Ekle</button>\r\n    </div>\r\n\r\n    <!-- Yorumlar Listesi -->\r\n    <div class=\"reviews-list\">\r\n      <div v-for=\"review in reviews\" :key=\"review.date\" class=\"review-item\">\r\n        <div class=\"review-header\">\r\n          <div class=\"rating\">\r\n            <span v-for=\"star in 5\" :key=\"star\" :class=\"{ active: star <= review.rating }\">★</span>\r\n          </div>\r\n          <span class=\"date\">{{ formatDate(review.date) }}</span>\r\n        </div>\r\n        <p class=\"comment\">{{ review.comment }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'BookReviews',\r\n  props: {\r\n    bookId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n      newReview: {\r\n        rating: 0,\r\n        comment: ''\r\n      },\r\n      isLoggedIn: true // Gerçek auth sistemine göre değiştirilmeli\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchReviews() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8001/reviews/${this.bookId}`);\r\n        this.reviews = response.data.reviews || [];\r\n      } catch (error) {\r\n        console.error('Yorumlar alınamadı:', error);\r\n      }\r\n    },\r\n    async submitReview() {\r\n      if (this.newReview.rating === 0) {\r\n        alert('Lütfen bir puan verin');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await axios.post('http://localhost:8001/reviews/add', {\r\n          bookId: this.bookId,\r\n          userId: 'user1',\r\n          rating: this.newReview.rating,\r\n          comment: this.newReview.comment\r\n        });\r\n        \r\n        this.newReview.rating = 0;\r\n        this.newReview.comment = '';\r\n        await this.fetchReviews();\r\n        alert('Yorumunuz başarıyla eklendi!');\r\n      } catch (error) {\r\n        console.error('Yorum eklenemedi:', error);\r\n        alert('Yorum eklenirken bir hata oluştu!');\r\n      }\r\n    },\r\n    formatDate(dateStr) {\r\n      return new Date(dateStr).toLocaleDateString('tr-TR');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchReviews();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reviews-section {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.review-form {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.rating {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.rating span {\r\n  font-size: 24px;\r\n  color: #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\n.rating span.active {\r\n  color: #ffd700;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  min-height: 100px;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.review-item {\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  border: 1px solid #eee;\r\n  border-radius: 5px;\r\n}\r\n\r\n.review-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.date {\r\n  color: #666;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.comment {\r\n  margin: 0;\r\n  line-height: 1.4;\r\n}\r\n</style> "],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QACTC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,UAAU,EAAE,IAAG,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,iCAAiC,IAAI,CAACb,MAAM,EAAE,CAAC;QAChF,IAAI,CAACK,OAAM,GAAIO,QAAQ,CAACR,IAAI,CAACC,OAAM,IAAK,EAAE;MAC5C,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACV,SAAS,CAACC,MAAK,KAAM,CAAC,EAAE;QAC/BU,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACF;MAEA,IAAI;QACF,MAAMpB,KAAK,CAACqB,IAAI,CAAC,mCAAmC,EAAE;UACpDlB,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBmB,MAAM,EAAE,OAAO;UACfZ,MAAM,EAAE,IAAI,CAACD,SAAS,CAACC,MAAM;UAC7BC,OAAO,EAAE,IAAI,CAACF,SAAS,CAACE;QAC1B,CAAC,CAAC;QAEF,IAAI,CAACF,SAAS,CAACC,MAAK,GAAI,CAAC;QACzB,IAAI,CAACD,SAAS,CAACE,OAAM,GAAI,EAAE;QAC3B,MAAM,IAAI,CAACG,YAAY,CAAC,CAAC;QACzBM,KAAK,CAAC,8BAA8B,CAAC;MACvC,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCG,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC;IACDG,UAAUA,CAACC,OAAO,EAAE;MAClB,OAAO,IAAIC,IAAI,CAACD,OAAO,CAAC,CAACE,kBAAkB,CAAC,OAAO,CAAC;IACtD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}