{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport axios from 'axios';\nimport { getCurrentInstance } from 'vue';\nexport default {\n  data() {\n    return {\n      books: [],\n      allBooks: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      itemsPerPage: 20\n    };\n  },\n  setup() {\n    const app = getCurrentInstance();\n    const emitter = app.appContext.config.globalProperties.emitter;\n    return {\n      emitter\n    };\n  },\n  computed: {\n    filteredBooks() {\n      // Admin panelinden gelen kitapları da dahil et\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n\n      // Arama filtresini uygula\n      const searchResults = uniqueBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n\n      // Sayfalama\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n\n      // Eğer mevcut sayfa geçersiz hale geldiyse, ilk sayfaya dön\n      if (start >= searchResults.length && this.currentPage > 1) {\n        this.currentPage = 2;\n        return searchResults.slice(0, this.itemsPerPage);\n      }\n      return searchResults.slice(start, end);\n    },\n    totalPages() {\n      // Admin panelinden gelen kitapları da dahil et\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n\n      // Arama filtresini uygula\n      const searchResults = uniqueBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\n    }\n  },\n  methods: {\n    // Kitapları birleştiren ve tekrarları önleyen method\n    mergeBooks(apiBooks, adminBooks) {\n      const allBooks = [...apiBooks];\n      const usedImages = new Set(apiBooks.map(book => book.image));\n\n      // Admin kitaplarını kontrol et ve sadece benzersiz olanları ekle\n      adminBooks.forEach(adminBook => {\n        // Aynı kapak fotosu veya aynı başlık-yazar kombinasyonu varsa ekleme\n        const isDuplicate = usedImages.has(adminBook.image) || allBooks.some(book => book.title.toLowerCase() === adminBook.title.toLowerCase() && book.author.toLowerCase() === adminBook.author.toLowerCase());\n        if (!isDuplicate) {\n          usedImages.add(adminBook.image);\n          allBooks.push(adminBook);\n        }\n      });\n      return allBooks;\n    },\n    async fetchBooks() {\n      try {\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=classic+literature&maxResults=40\");\n        const rawBooks = response.data.items || [];\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n\n        // Önce benzersiz API kitaplarını al\n        const uniqueBooks = [];\n        const usedImages = new Set();\n        let id = 1;\n\n        // Tam olarak 20 kitap al\n        for (const item of rawBooks) {\n          if (uniqueBooks.length >= 20) break; // 20 kitaba ulaşınca dur\n\n          if (item.volumeInfo.imageLinks) {\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\n\n            // Admin kitaplarında olmayan ve daha önce kullanılmamış kitapları ekle\n            const isDuplicate = usedImages.has(imageUrl) || adminBooks.some(adminBook => adminBook.image === imageUrl || adminBook.title.toLowerCase() === title.toLowerCase() && adminBook.author.toLowerCase() === author.toLowerCase());\n            if (!isDuplicate) {\n              usedImages.add(imageUrl);\n              uniqueBooks.push({\n                id: id++,\n                title: title,\n                author: author,\n                image: imageUrl\n              });\n            }\n          }\n        }\n        this.allBooks = uniqueBooks;\n        this.books = [...uniqueBooks];\n      } catch (error) {\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    logout() {\n      this.$router.push(\"/\");\n    },\n    // Kitapları yeniden yükleme metodu\n    refreshBooks() {\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\n      this.books = uniqueBooks;\n\n      // Eğer mevcut sayfa geçersiz hale geldiyse, ilk sayfaya dön\n      if ((this.currentPage - 1) * this.itemsPerPage >= uniqueBooks.length) {\n        this.currentPage = 1;\n      }\n    }\n  },\n  mounted() {\n    this.fetchBooks();\n\n    // Admin panelinden gelen güncellemeleri dinle\n    this.emitter.on('books-updated', () => {\n      this.refreshBooks();\n    });\n  },\n  unmounted() {\n    // Component unmount olduğunda event listener'ı temizle\n    this.emitter.off('books-updated');\n  }\n};","map":{"version":3,"names":["axios","getCurrentInstance","data","books","allBooks","searchQuery","currentPage","itemsPerPage","setup","app","emitter","appContext","config","globalProperties","computed","filteredBooks","adminBooks","JSON","parse","localStorage","getItem","uniqueBooks","mergeBooks","searchResults","filter","book","title","toLowerCase","includes","author","start","end","length","slice","totalPages","Math","max","ceil","methods","apiBooks","usedImages","Set","map","image","forEach","adminBook","isDuplicate","has","some","add","push","fetchBooks","response","get","rawBooks","items","id","item","volumeInfo","imageLinks","imageUrl","thumbnail","authors","error","console","prevPage","nextPage","logout","$router","refreshBooks","mounted","on","unmounted","off"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button class=\"page-button\" :disabled=\"currentPage === 1\" @click=\"prevPage\">\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"page-button\" :disabled=\"currentPage === totalPages\" @click=\"nextPage\">\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n    };\r\n  },\r\n  setup() {\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    return { emitter };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      // Admin panelinden gelen kitapları da dahil et\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      \r\n      // Arama filtresini uygula\r\n      const searchResults = uniqueBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      // Sayfalama\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      \r\n      // Eğer mevcut sayfa geçersiz hale geldiyse, ilk sayfaya dön\r\n      if (start >= searchResults.length && this.currentPage > 1) {\r\n        this.currentPage = 2;\r\n        return searchResults.slice(0, this.itemsPerPage);\r\n      }\r\n      \r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      // Admin panelinden gelen kitapları da dahil et\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      \r\n      // Arama filtresini uygula\r\n      const searchResults = uniqueBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\r\n    }\r\n  },\r\n  methods: {\r\n    // Kitapları birleştiren ve tekrarları önleyen method\r\n    mergeBooks(apiBooks, adminBooks) {\r\n      const allBooks = [...apiBooks];\r\n      const usedImages = new Set(apiBooks.map(book => book.image));\r\n      \r\n      // Admin kitaplarını kontrol et ve sadece benzersiz olanları ekle\r\n      adminBooks.forEach(adminBook => {\r\n        // Aynı kapak fotosu veya aynı başlık-yazar kombinasyonu varsa ekleme\r\n        const isDuplicate = \r\n          usedImages.has(adminBook.image) ||\r\n          allBooks.some(book => \r\n            book.title.toLowerCase() === adminBook.title.toLowerCase() &&\r\n            book.author.toLowerCase() === adminBook.author.toLowerCase()\r\n          );\r\n        \r\n        if (!isDuplicate) {\r\n          usedImages.add(adminBook.image);\r\n          allBooks.push(adminBook);\r\n        }\r\n      });\r\n      \r\n      return allBooks;\r\n    },\r\n    async fetchBooks() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=classic+literature&maxResults=40\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n        \r\n        // Önce benzersiz API kitaplarını al\r\n        const uniqueBooks = [];\r\n        const usedImages = new Set();\r\n        let id = 1;\r\n        \r\n        // Tam olarak 20 kitap al\r\n        for (const item of rawBooks) {\r\n          if (uniqueBooks.length >= 20) break; // 20 kitaba ulaşınca dur\r\n          \r\n          if (item.volumeInfo.imageLinks) {\r\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\r\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\r\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\r\n            \r\n            // Admin kitaplarında olmayan ve daha önce kullanılmamış kitapları ekle\r\n            const isDuplicate = \r\n              usedImages.has(imageUrl) || \r\n              adminBooks.some(adminBook => \r\n                adminBook.image === imageUrl ||\r\n                (adminBook.title.toLowerCase() === title.toLowerCase() &&\r\n                 adminBook.author.toLowerCase() === author.toLowerCase())\r\n              );\r\n            \r\n            if (!isDuplicate) {\r\n              usedImages.add(imageUrl);\r\n              uniqueBooks.push({\r\n                id: id++,\r\n                title: title,\r\n                author: author,\r\n                image: imageUrl,\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        this.allBooks = uniqueBooks;\r\n        this.books = [...uniqueBooks];\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n    // Kitapları yeniden yükleme metodu\r\n    refreshBooks() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const uniqueBooks = this.mergeBooks(this.allBooks, adminBooks);\r\n      this.books = uniqueBooks;\r\n      \r\n      // Eğer mevcut sayfa geçersiz hale geldiyse, ilk sayfaya dön\r\n      if ((this.currentPage - 1) * this.itemsPerPage >= uniqueBooks.length) {\r\n        this.currentPage = 1;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks();\r\n    \r\n    // Admin panelinden gelen güncellemeleri dinle\r\n    this.emitter.on('books-updated', () => {\r\n      this.refreshBooks();\r\n    });\r\n  },\r\n  unmounted() {\r\n    // Component unmount olduğunda event listener'ı temizle\r\n    this.emitter.off('books-updated');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}