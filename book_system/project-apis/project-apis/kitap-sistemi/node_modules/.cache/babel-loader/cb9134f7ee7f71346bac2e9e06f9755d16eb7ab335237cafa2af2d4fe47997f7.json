{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nimport { getCurrentInstance } from 'vue';\nexport default {\n  data() {\n    return {\n      books: [],\n      allBooks: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      itemsPerPage: 20,\n      maxBooks: 30,\n      isGrpcRunning: true,\n      grpcErrorShown: false\n    };\n  },\n  setup() {\n    const app = getCurrentInstance();\n    const emitter = app.appContext.config.globalProperties.emitter;\n    return {\n      emitter\n    };\n  },\n  computed: {\n    filteredBooks() {\n      const searchResults = this.books.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return searchResults.slice(start, end);\n    },\n    totalPages() {\n      const searchResults = this.books.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\n    }\n  },\n  methods: {\n    async fetchBooks() {\n      try {\n        // Önce admin kitaplarını kontrol et\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n\n        // Eğer admin kitapları varsa, onları kullan\n        if (adminBooks.length > 0) {\n          this.allBooks = adminBooks;\n          this.books = [...adminBooks];\n          return;\n        }\n\n        // Admin kitapları yoksa API'den çek\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=sherlock+holmes+doyle&orderBy=relevance&maxResults=40\");\n        const rawBooks = response.data.items || [];\n\n        // Benzersiz kitapları filtrele\n        const uniqueBooks = [];\n        const usedImages = new Set();\n        let id = 1;\n\n        // maxBooks değişkenini kullan\n        for (const item of rawBooks) {\n          if (uniqueBooks.length >= this.maxBooks) break;\n          if (item.volumeInfo.imageLinks) {\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\n            const isDuplicate = usedImages.has(imageUrl) || uniqueBooks.some(book => book.title.toLowerCase() === title.toLowerCase() && book.author.toLowerCase() === author.toLowerCase());\n            if (!isDuplicate) {\n              usedImages.add(imageUrl);\n              uniqueBooks.push({\n                id: id++,\n                title: title,\n                author: author,\n                image: imageUrl\n              });\n            }\n          }\n        }\n        this.allBooks = uniqueBooks;\n        this.books = [...uniqueBooks];\n\n        // Kitapları localStorage'a kaydet\n        localStorage.setItem('adminBooks', JSON.stringify(uniqueBooks));\n      } catch (error) {\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    logout() {\n      this.$router.push(\"/\");\n    },\n    // Kitapları yeniden yükleme metodu\n    refreshBooks() {\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      this.books = [...adminBooks];\n      if ((this.currentPage - 1) * this.itemsPerPage >= this.books.length) {\n        this.currentPage = 1;\n      }\n    },\n    async handleSearch() {\n      if (this.searchQuery.length >= 2) {\n        try {\n          const response = await axios.get(`http://localhost:3000/search?query=${this.searchQuery}`);\n          if (response.data && response.data.books) {\n            this.books = response.data.books;\n            this.isGrpcRunning = true;\n            this.grpcErrorShown = false;\n          }\n        } catch (error) {\n          this.isGrpcRunning = false;\n          if (!this.grpcErrorShown) {\n            alert('gRPC sunucularından biri çalışmıyor. Lütfen sunucuların çalıştığından emin olun.');\n            this.grpcErrorShown = true;\n            this.searchQuery = '';\n          }\n        }\n      } else if (this.searchQuery.length === 0) {\n        this.refreshBooks();\n        this.grpcErrorShown = false;\n        this.isGrpcRunning = true;\n      }\n    }\n  },\n  mounted() {\n    this.fetchBooks();\n    this.emitter.on('books-updated', () => {\n      this.refreshBooks();\n    });\n  },\n  unmounted() {\n    this.emitter.off('books-updated');\n  }\n};","map":{"version":3,"names":["axios","getCurrentInstance","data","books","allBooks","searchQuery","currentPage","itemsPerPage","maxBooks","isGrpcRunning","grpcErrorShown","setup","app","emitter","appContext","config","globalProperties","computed","filteredBooks","searchResults","filter","book","title","toLowerCase","includes","author","start","end","slice","totalPages","Math","max","ceil","length","methods","fetchBooks","adminBooks","JSON","parse","localStorage","getItem","response","get","rawBooks","items","uniqueBooks","usedImages","Set","id","item","volumeInfo","imageLinks","imageUrl","thumbnail","authors","isDuplicate","has","some","add","push","image","setItem","stringify","error","console","prevPage","nextPage","logout","$router","refreshBooks","handleSearch","alert","mounted","on","unmounted","off"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n        @input=\"handleSearch\"\r\n        :disabled=\"!isGrpcRunning\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button class=\"page-button\" :disabled=\"currentPage === 1\" @click=\"prevPage\">\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"page-button\" :disabled=\"currentPage === totalPages\" @click=\"nextPage\">\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n      maxBooks: 30,\r\n      isGrpcRunning: true,\r\n      grpcErrorShown: false\r\n    };\r\n  },\r\n  setup() {\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    return { emitter };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      \r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n      try {\r\n        // Önce admin kitaplarını kontrol et\r\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n        \r\n        // Eğer admin kitapları varsa, onları kullan\r\n        if (adminBooks.length > 0) {\r\n          this.allBooks = adminBooks;\r\n          this.books = [...adminBooks];\r\n          return;\r\n        }\r\n        \r\n        // Admin kitapları yoksa API'den çek\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=sherlock+holmes+doyle&orderBy=relevance&maxResults=40\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        \r\n        // Benzersiz kitapları filtrele\r\n        const uniqueBooks = [];\r\n        const usedImages = new Set();\r\n        let id = 1;\r\n        \r\n        // maxBooks değişkenini kullan\r\n        for (const item of rawBooks) {\r\n          if (uniqueBooks.length >= this.maxBooks) break;\r\n          \r\n          if (item.volumeInfo.imageLinks) {\r\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\r\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\r\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\r\n            \r\n            const isDuplicate = usedImages.has(imageUrl) || \r\n              uniqueBooks.some(book => \r\n                book.title.toLowerCase() === title.toLowerCase() &&\r\n                book.author.toLowerCase() === author.toLowerCase()\r\n              );\r\n            \r\n            if (!isDuplicate) {\r\n              usedImages.add(imageUrl);\r\n              uniqueBooks.push({\r\n                id: id++,\r\n                title: title,\r\n                author: author,\r\n                image: imageUrl,\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        this.allBooks = uniqueBooks;\r\n        this.books = [...uniqueBooks];\r\n        \r\n        // Kitapları localStorage'a kaydet\r\n        localStorage.setItem('adminBooks', JSON.stringify(uniqueBooks));\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n    // Kitapları yeniden yükleme metodu\r\n    refreshBooks() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      this.books = [...adminBooks];\r\n      \r\n      if ((this.currentPage - 1) * this.itemsPerPage >= this.books.length) {\r\n        this.currentPage = 1;\r\n      }\r\n    },\r\n    async handleSearch() {\r\n      if (this.searchQuery.length >= 2) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/search?query=${this.searchQuery}`);\r\n          \r\n          if (response.data && response.data.books) {\r\n            this.books = response.data.books;\r\n            this.isGrpcRunning = true;\r\n            this.grpcErrorShown = false;\r\n          }\r\n        } catch (error) {\r\n          this.isGrpcRunning = false;\r\n          if (!this.grpcErrorShown) {\r\n            alert('gRPC sunucularından biri çalışmıyor. Lütfen sunucuların çalıştığından emin olun.');\r\n            this.grpcErrorShown = true;\r\n            this.searchQuery = '';\r\n          }\r\n        }\r\n      } else if (this.searchQuery.length === 0) {\r\n        this.refreshBooks();\r\n        this.grpcErrorShown = false;\r\n        this.isGrpcRunning = true;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks();\r\n    \r\n    this.emitter.on('books-updated', () => {\r\n      this.refreshBooks();\r\n    });\r\n  },\r\n  unmounted() {\r\n    this.emitter.off('books-updated');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.search-input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}