[{"C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\main.js":"1","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\App.vue":"2","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\router\\index.js":"3","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\store\\index.js":"4","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\LoginPage.vue":"5","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue":"6","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\AdminPanel.vue":"7","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\components\\BookReviews.vue":"8"},{"size":431,"mtime":1736234684000,"results":"9","hashOfConfig":"10"},{"size":535,"mtime":1736235150000,"results":"11","hashOfConfig":"10"},{"size":780,"mtime":1736280892000,"results":"12","hashOfConfig":"10"},{"size":1421,"mtime":1736234852000,"results":"13","hashOfConfig":"10"},{"size":4837,"mtime":1736235402000,"results":"14","hashOfConfig":"10"},{"size":8587,"mtime":1736279214000,"results":"15","hashOfConfig":"10"},{"size":16029,"mtime":1736239182000,"results":"16","hashOfConfig":"10"},{"size":4173,"mtime":1736235558000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"yp9l7t",{"filePath":"21","messages":"22","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\main.js",["42"],"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport mitt from 'mitt';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\n//uygulamanın oluşturulması\nconst emitter = mitt();\nconst app = createApp(App);\n\napp.config.globalProperties.emitter = emitter;\n\napp.use(router)\n   .use(store)\n   .mount(\"#app\");\n","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\App.vue",["43"],"<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport { useStore } from 'vuex';\n\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore();\n\n    // Sayfa yenilendiğinde oturum kontrolü\n    const user = localStorage.getItem('user');\n    if (user) {\n      store.dispatch('login', JSON.parse(user));\n    }\n\n    return {};\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\router\\index.js",["44"],"import { createRouter, createWebHistory } from \"vue-router\";\r\nimport HomePage from '../views/HomePage.vue';\r\nimport AdminPanel from '../views/AdminPanel.vue';\r\nimport LoginPage from \"../views/LoginPage.vue\";\r\nimport store from '../store';\r\n\r\nconst routes = [\r\n  { \r\n    path: \"/\", \r\n    name: \"LoginPage\", \r\n    component: LoginPage \r\n  },\r\n  { \r\n    path: '/home', \r\n    name: 'HomePage', \r\n    component: HomePage \r\n  },\r\n  { \r\n    path: \"/admin\", \r\n    name: \"AdminPanel\", \r\n    component: AdminPanel \r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.path === '/admin' && !store.getters.isAuthenticated) {\r\n    next('/');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\store\\index.js",["45"],"import { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      books: [],\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    }\r\n  },\r\n  mutations: {\r\n    SET_BOOKS(state, books) {\r\n      state.books = books;\r\n    },\r\n    ADD_BOOK(state, book) {\r\n      state.books.push(book);\r\n    },\r\n    UPDATE_BOOK(state, updatedBook) {\r\n      const index = state.books.findIndex(book => book.id === updatedBook.id);\r\n      if (index !== -1) {\r\n        state.books[index] = updatedBook;\r\n      }\r\n    },\r\n    DELETE_BOOK(state, bookId) {\r\n      state.books = state.books.filter(book => book.id !== bookId);\r\n    },\r\n    SET_USER(state, user) {\r\n      state.currentUser = user;\r\n      state.isAuthenticated = !!user;\r\n    }\r\n  },\r\n  actions: {\r\n    setBooks({ commit }, books) {\r\n      commit('SET_BOOKS', books);\r\n    },\r\n    addBook({ commit }, book) {\r\n      commit('ADD_BOOK', book);\r\n    },\r\n    updateBook({ commit }, book) {\r\n      commit('UPDATE_BOOK', book);\r\n    },\r\n    deleteBook({ commit }, bookId) {\r\n      commit('DELETE_BOOK', bookId);\r\n    },\r\n    login({ commit }, user) {\r\n      commit('SET_USER', user);\r\n    },\r\n    logout({ commit }) {\r\n      commit('SET_USER', null);\r\n    }\r\n  },\r\n  getters: {\r\n    allBooks: state => state.books,\r\n    isAuthenticated: state => state.isAuthenticated,\r\n    currentUser: state => state.currentUser\r\n  }\r\n});\r\n\r\nexport default store; ","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\LoginPage.vue",["46"],"<template>\r\n  <div class=\"login-page\">\r\n    <!-- Başlık ve Slogan -->\r\n    <div class=\"header\">\r\n      <h1>Kitap Bul</h1>\r\n      <p>Aradığın tüm kitaplar elinin altında!</p>\r\n    </div>\r\n\r\n    <!-- Seçenekler -->\r\n    <div class=\"selection-container\">\r\n      <div class=\"option\" @click=\"handleAdminLogin\">\r\n        <i class=\"fas fa-user-shield icon\"></i>\r\n        <p>Yönetici Girişi</p>\r\n      </div>\r\n      <div class=\"option\" @click=\"handleUserLogin\">\r\n        <i class=\"fas fa-user icon\"></i>\r\n        <p>Kullanıcı Girişi</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Admin Giriş Modal -->\r\n    <div v-if=\"showAdminModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Yönetici Girişi</h2>\r\n        <form @submit.prevent=\"submitAdminLogin\">\r\n          <input v-model=\"username\" type=\"text\" placeholder=\"Kullanıcı Adı\" required>\r\n          <input v-model=\"password\" type=\"password\" placeholder=\"Şifre\" required>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\">Giriş</button>\r\n            <button type=\"button\" @click=\"closeModal\">İptal</button>\r\n          </div>\r\n        </form>\r\n        <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const username = ref('');\r\n    const password = ref('');\r\n    const showAdminModal = ref(false);\r\n    const errorMessage = ref('');\r\n\r\n    const handleAdminLogin = () => {\r\n      showAdminModal.value = true;\r\n    };\r\n\r\n    const handleUserLogin = () => {\r\n      router.push('/home');\r\n    };\r\n\r\n    const submitAdminLogin = () => {\r\n      const adminCredentials = {\r\n        username: \"adming\",\r\n        password: \"123456\"\r\n      };\r\n\r\n      if (\r\n        username.value === adminCredentials.username && \r\n        password.value === adminCredentials.password\r\n      ) {\r\n        store.dispatch('login', { username: username.value });\r\n        router.push('/admin');\r\n      } else {\r\n        errorMessage.value = 'Kullanıcı adı veya parola hatalı!';\r\n      }\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showAdminModal.value = false;\r\n      username.value = '';\r\n      password.value = '';\r\n      errorMessage.value = '';\r\n    };\r\n\r\n    return {\r\n      username,\r\n      password,\r\n      showAdminModal,\r\n      errorMessage,\r\n      handleAdminLogin,\r\n      handleUserLogin,\r\n      submitAdminLogin,\r\n      closeModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Genel Sayfa Stili */\r\n.login-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-color: #f4f4f4;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n/* Başlık ve Slogan */\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.header p {\r\n  font-size: 18px;\r\n  color: #6c757d;\r\n  margin: 0;\r\n}\r\n\r\n/* Seçim Kutusu */\r\n.selection-container {\r\n  display: flex;\r\n  gap: 50px;\r\n}\r\n\r\n.option {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 150px;\r\n  padding: 20px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.option:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.option .icon {\r\n  font-size: 48px;\r\n  color: #007bff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.option p {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n\r\n/* Modal Stili */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n}\r\n\r\n.modal-content h2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.modal-content input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.modal-actions button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-actions button[type=\"submit\"] {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.modal-actions button[type=\"button\"] {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.error-message {\r\n  color: #dc3545;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue",["47"],"<template>\r\n  <div class=\"home-page\">\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n        @input=\"handleSearch\"\r\n        :disabled=\"!isGrpcRunning\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n          <BookReviews :bookId=\"book.id.toString()\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pagination\">\r\n      <button class=\"page-button\" :disabled=\"currentPage === 1\" @click=\"prevPage\">\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"page-button\" :disabled=\"currentPage === totalPages\" @click=\"nextPage\">\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance } from 'vue';\r\nimport BookReviews from '@/components/BookReviews.vue';\r\n\r\nexport default {\r\n  components: {\r\n    BookReviews\r\n  },\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n      maxBooks: 30,\r\n      isGrpcRunning: true,\r\n      grpcErrorShown: false\r\n    };\r\n  },\r\n  setup() {\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    return { emitter };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      \r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n      try {\r\n\r\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n        \r\n        \r\n        if (adminBooks.length > 0) {\r\n          this.allBooks = adminBooks;\r\n          this.books = [...adminBooks];\r\n          return;\r\n        }\r\n        \r\n\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=subject:classic&maxResults=40\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        \r\n\r\n        const uniqueBooks = [];\r\n        const usedImages = new Set();\r\n        let id = 1;\r\n        \r\n\r\n        for (const item of rawBooks) {\r\n          if (uniqueBooks.length >= this.maxBooks) break;\r\n          \r\n          if (item.volumeInfo.imageLinks) {\r\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\r\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\r\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\r\n            \r\n            const isDuplicate = usedImages.has(imageUrl) || \r\n              uniqueBooks.some(book => \r\n                book.title.toLowerCase() === title.toLowerCase() &&\r\n                book.author.toLowerCase() === author.toLowerCase()\r\n              );\r\n            \r\n            if (!isDuplicate) {\r\n              usedImages.add(imageUrl);\r\n              uniqueBooks.push({\r\n                id: id++,\r\n                title: title,\r\n                author: author,\r\n                image: imageUrl,\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        this.allBooks = uniqueBooks;\r\n        this.books = [...uniqueBooks];\r\n        \r\n        //LocalStorage\r\n        localStorage.setItem('adminBooks', JSON.stringify(uniqueBooks));\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n\r\n    refreshBooks() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      this.books = [...adminBooks];\r\n      \r\n      if ((this.currentPage - 1) * this.itemsPerPage >= this.books.length) {\r\n        this.currentPage = 1;\r\n      }\r\n    },\r\n    async handleSearch() {\r\n      if (this.searchQuery.length >= 2) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/search?query=${this.searchQuery}`);\r\n          \r\n          if (response.data && response.data.books) {\r\n            this.books = response.data.books;\r\n            this.isGrpcRunning = true;\r\n            this.grpcErrorShown = false;\r\n          }\r\n        } catch (error) {\r\n\r\n          if (error.message.includes('Network Error')) {\r\n            this.isGrpcRunning = false;\r\n            if (!this.grpcErrorShown) {\r\n              alert('gRPC sunucusu (client.js) çalışmıyor. Lütfen sunucuyu başlatın.');\r\n              this.grpcErrorShown = true;\r\n              this.searchQuery = '';\r\n            }\r\n          } else {\r\n\r\n            this.books = this.allBooks.filter(book =>\r\n              book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n              book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n            );\r\n            this.isGrpcRunning = true;\r\n            this.grpcErrorShown = false;\r\n          }\r\n        }\r\n      } else if (this.searchQuery.length === 0) {\r\n        this.refreshBooks();\r\n        this.grpcErrorShown = false;\r\n        this.isGrpcRunning = true;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks();\r\n    \r\n    this.emitter.on('books-updated', () => {\r\n      this.refreshBooks();\r\n    });\r\n  },\r\n  unmounted() {\r\n    this.emitter.off('books-updated');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.search-input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n</style>","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\AdminPanel.vue",["48"],"<template>\r\n  <div class=\"admin-panel\">\r\n    <!-- Navbar -->\r\n    <div class=\"header\">\r\n      <h1>Admin Panel</h1>\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </div>\r\n\r\n    <!-- Kitap Tablosu -->\r\n    <div class=\"book-management\">\r\n      <div class=\"management-header\">\r\n        <h2>Kitap Yönetimi</h2>\r\n        <button class=\"add-btn\" @click=\"openAddModal\">Kitap Ekle</button>\r\n      </div>\r\n      <div class=\"book-table-container\">\r\n        <table class=\"book-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Resim</th>\r\n              <th>Başlık</th>\r\n              <th>Yazar</th>\r\n              <th>Yorumlar</th>\r\n              <th>İşlemler</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"book in books\" :key=\"book.id\">\r\n              <td>{{ book.id }}</td>\r\n              <td><img :src=\"book.image\" :alt=\"book.title\" class=\"book-image\"></td>\r\n              <td>{{ book.title }}</td>\r\n              <td>{{ book.author }}</td>\r\n              <td class=\"reviews-cell\">\r\n                <div class=\"rating-summary\" v-if=\"bookReviews[book.id]\">\r\n                  <div class=\"average-rating\">\r\n                    <span class=\"stars\">\r\n                      <span v-for=\"star in 5\" :key=\"star\" \r\n                            :class=\"{ active: star <= bookReviews[book.id].averageRating }\">★</span>\r\n                    </span>\r\n                    <span class=\"rating-text\">\r\n                      {{ bookReviews[book.id].averageRating.toFixed(1) }} \r\n                      ({{ bookReviews[book.id].totalReviews }} yorum)\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"recent-comments\" v-if=\"bookReviews[book.id].recentComments.length > 0\">\r\n                    <div v-for=\"(comment, index) in bookReviews[book.id].recentComments\" \r\n                         :key=\"index\" class=\"comment\">\r\n                      \"{{ comment }}\"\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <span v-else>Henüz yorum yok</span>\r\n              </td>\r\n              <td class=\"actions\">\r\n                <button @click=\"openEditModal(book)\" class=\"edit-btn\">Düzenle</button>\r\n                <button @click=\"deleteBook(book.id)\" class=\"delete-btn\">Sil</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Düzenleme Modal -->\r\n    <div v-if=\"showEditModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Kitap Düzenle</h2>\r\n        <form @submit.prevent=\"saveEdit\">\r\n          <div class=\"form-group\">\r\n            <label for=\"id\">ID</label>\r\n            <input v-model=\"editBook.id\" id=\"id\" type=\"text\" readonly />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"title\">Kitap Adı</label>\r\n            <input v-model=\"editBook.title\" id=\"title\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"author\">Yazar</label>\r\n            <input v-model=\"editBook.author\" id=\"author\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"image\">Resim URL</label>\r\n            <input v-model=\"editBook.image\" id=\"image\" type=\"url\" required />\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-button\">Kaydet</button>\r\n            <button type=\"button\" @click=\"closeEditModal\" class=\"cancel-button\">İptal</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Kitap Ekleme Modal -->\r\n    <div v-if=\"showAddModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Yeni Kitap Ekle</h2>\r\n        <form @submit.prevent=\"saveNewBook\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newTitle\">Kitap Adı</label>\r\n            <input v-model=\"newBook.title\" id=\"newTitle\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"newAuthor\">Yazar</label>\r\n            <input v-model=\"newBook.author\" id=\"newAuthor\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"newImage\">Resim URL</label>\r\n            <input v-model=\"newBook.image\" id=\"newImage\" type=\"url\" required />\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-button\">Kaydet</button>\r\n            <button type=\"button\" @click=\"closeAddModal\" class=\"cancel-button\">İptal</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance, reactive } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    \r\n    // Kullanıcı kontrolü\r\n    if (!store.getters.isAuthenticated) {\r\n      router.push('/');\r\n    }\r\n\r\n    return { \r\n      store,\r\n      emitter \r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      books: JSON.parse(localStorage.getItem('adminBooks')) || [],\r\n      showEditModal: false,\r\n      editBook: { id: \"\", title: \"\", author: \"\", image: \"\" },\r\n      showAddModal: false,\r\n      newBook: { title: \"\", author: \"\", image: \"\" },\r\n      maxBooks: 30,\r\n      bookReviews: reactive({}),\r\n      reviewsInterval: null,\r\n    };\r\n  },\r\n  methods: {\r\n    saveToLocalStorage() {\r\n      localStorage.setItem('adminBooks', JSON.stringify(this.books));\r\n      this.store.dispatch('setBooks', this.books);\r\n      this.emitter.emit('books-updated', this.books);\r\n    },\r\n    async fetchBooks() {\r\n      if (this.books.length === 0) {\r\n        try {\r\n          // Farklı yazarlar için arama sorguları\r\n          const queries = [\r\n            'sherlock+holmes+doyle',\r\n            'agatha+christie',\r\n            'dan+brown',\r\n            'stephen+king',\r\n            'j.k.+rowling',\r\n            'george+orwell',\r\n            'jules+verne'\r\n          ];\r\n\r\n          let allBooks = [];\r\n          \r\n          // Her yazar için arama yap\r\n          for (const query of queries) {\r\n            const response = await axios.get(\r\n              `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=10`\r\n            );\r\n            \r\n            if (response.data.items) {\r\n              allBooks = [...allBooks, ...response.data.items];\r\n            }\r\n          }\r\n\r\n          // Benzersiz kitapları filtrele\r\n          const uniqueBooks = [];\r\n          const usedImages = new Set();\r\n          let id = 1;\r\n\r\n          // Karıştır ve maxBooks kadar al\r\n          allBooks = allBooks.sort(() => Math.random() - 0.5);\r\n          \r\n          for (const item of allBooks) {\r\n            if (uniqueBooks.length >= this.maxBooks) break;\r\n\r\n            if (item.volumeInfo.imageLinks && item.volumeInfo.authors) {\r\n              const imageUrl = item.volumeInfo.imageLinks.thumbnail;\r\n              const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\r\n              const author = item.volumeInfo.authors[0] || \"Bilinmeyen Yazar\";\r\n\r\n              // Hem resim hem de başlık-yazar kombinasyonu benzersiz olmalı\r\n              const isDuplicate = usedImages.has(imageUrl) || \r\n                uniqueBooks.some(book => \r\n                  book.title.toLowerCase() === title.toLowerCase() &&\r\n                  book.author.toLowerCase() === author.toLowerCase()\r\n                );\r\n\r\n              if (!isDuplicate) {\r\n                usedImages.add(imageUrl);\r\n                uniqueBooks.push({\r\n                  id: id++,\r\n                  title: title,\r\n                  author: author,\r\n                  image: imageUrl,\r\n                });\r\n              }\r\n            }\r\n          }\r\n\r\n          this.books = uniqueBooks;\r\n          this.saveToLocalStorage();\r\n        } catch (error) {\r\n          console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n        }\r\n      }\r\n    },\r\n    openEditModal(book) {\r\n      this.editBook = { ...book };\r\n      this.showEditModal = true;\r\n    },\r\n    saveEdit() {\r\n      if (!this.isBookUnique(this.editBook, this.editBook.id)) {\r\n        alert(\"Bu kitap zaten mevcut veya aynı resim URL'sine sahip başka bir kitap var!\");\r\n        return;\r\n      }\r\n\r\n      const index = this.books.findIndex(book => book.id === this.editBook.id);\r\n      if (index !== -1) {\r\n        this.books[index] = { ...this.editBook };\r\n        this.saveToLocalStorage();\r\n        alert(\"Kitap başarıyla güncellendi!\");\r\n      }\r\n      this.closeEditModal();\r\n    },\r\n    deleteBook(id) {\r\n      const index = this.books.findIndex(book => book.id === id);\r\n      if (index !== -1) {\r\n        if (confirm(\"Bu kitabı silmek istediğinizden emin misiniz?\")) {\r\n          this.books.splice(index, 1);\r\n          this.reorderBookIds();\r\n          this.saveToLocalStorage();\r\n          alert(\"Kitap başarıyla silindi!\");\r\n        }\r\n      }\r\n    },\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.editBook = { id: \"\", title: \"\", author: \"\", image: \"\" };\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n    openAddModal() {\r\n      this.showAddModal = true;\r\n    },\r\n    closeAddModal() {\r\n      this.showAddModal = false;\r\n      this.newBook = { title: \"\", author: \"\", image: \"\" };\r\n    },\r\n    saveNewBook() {\r\n      if (!this.isBookUnique(this.newBook)) {\r\n        alert(\"Bu kitap zaten mevcut veya aynı resim URL'sine sahip başka bir kitap var!\");\r\n        return;\r\n      }\r\n\r\n      const maxId = Math.max(...this.books.map(b => parseInt(b.id)), 0);\r\n      const newBook = {\r\n        id: maxId + 1,\r\n        title: this.newBook.title,\r\n        author: this.newBook.author,\r\n        image: this.newBook.image || \"https://via.placeholder.com/150x225\"\r\n      };\r\n      this.books.push(newBook);\r\n      this.saveToLocalStorage();\r\n      this.closeAddModal();\r\n    },\r\n    isBookUnique(newBook, excludeId = null) {\r\n      return !this.books.some(book => {\r\n        if (book.id === excludeId) return false;\r\n        \r\n        // Aynı kapak fotosu kontrolü\r\n        if (book.image === newBook.image) return true;\r\n        \r\n        // Başlık ve yazar kontrolü (büyük/küçük harf duyarsız)\r\n        const sameTitle = book.title.toLowerCase() === newBook.title.toLowerCase();\r\n        const sameAuthor = book.author.toLowerCase() === newBook.author.toLowerCase();\r\n        \r\n        return sameTitle && sameAuthor;\r\n      });\r\n    },\r\n    reorderBookIds() {\r\n      this.books = this.books\r\n        .sort((a, b) => a.id - b.id) // Önce mevcut ID'lere göre sırala\r\n        .map((book, index) => ({\r\n          ...book,\r\n          id: index + 1 // Yeni ID'leri ata\r\n        }));\r\n    },\r\n    async fetchBookReviews() {\r\n      for (const book of this.books) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8001/reviews/${book.id}`);\r\n          \r\n          if (response.data && response.data.reviews) {\r\n            const reviews = response.data.reviews;\r\n            const totalReviews = reviews.length;\r\n            \r\n            if (totalReviews > 0) {\r\n              const averageRating = reviews.reduce((acc, review) => acc + Number(review.rating), 0) / totalReviews;\r\n              const recentComments = reviews\r\n                .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                .slice(0, 2)\r\n                .map(review => review.comment);\r\n              \r\n              this.bookReviews[book.id] = {\r\n                averageRating,\r\n                totalReviews,\r\n                recentComments\r\n              };\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(`${book.title} için yorumlar alınamadı:`, error);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.fetchBooks();\r\n    await this.fetchBookReviews();\r\n    \r\n    // Her 10 saniyede bir yorumları güncelle\r\n    this.reviewsInterval = setInterval(() => {\r\n      this.fetchBookReviews();\r\n    }, 10000);\r\n  },\r\n  beforeUnmount() {\r\n    // Component unmount olmadan önce interval'i temizle\r\n    if (this.reviewsInterval) {\r\n      clearInterval(this.reviewsInterval);\r\n    }\r\n  },\r\n  beforeMount() {\r\n    // Kullanıcı kontrolü\r\n    if (!this.store.getters.isAuthenticated) {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-panel {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.header h1 {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: normal;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.book-management {\r\n  margin-top: 20px;\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.book-management h2 {\r\n  margin: 0 0 20px 0;\r\n  font-size: 20px;\r\n}\r\n\r\n.book-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.book-table th,\r\n.book-table td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #dee2e6;\r\n}\r\n\r\n.book-table th {\r\n  background-color: #f8f9fa;\r\n  font-weight: 500;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.edit-btn {\r\n  background-color: #ffc107;\r\n  color: white;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  width: 400px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.save-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.management-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-btn {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.book-thumbnail {\r\n  width: 50px;\r\n  height: 75px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n\r\n.book-table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.reviews-cell {\r\n  max-width: 250px;\r\n  padding: 10px;\r\n}\r\n\r\n.rating-summary {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.average-rating {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.stars {\r\n  color: #ddd;\r\n  font-size: 18px;\r\n}\r\n\r\n.stars .active {\r\n  color: #ffd700;\r\n}\r\n\r\n.rating-text {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.recent-comments {\r\n  font-size: 13px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.comment {\r\n  margin-top: 4px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.book-image {\r\n  width: 50px;\r\n  height: 75px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n</style>","C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\components\\BookReviews.vue",["49"],"<template>\r\n  <div class=\"reviews-section\">\r\n    <h3>Yorumlar</h3>\r\n    \r\n    <!-- Yorum Ekleme Formu -->\r\n    <div class=\"review-form\" v-if=\"isLoggedIn\">\r\n      <div class=\"rating\">\r\n        <span \r\n          v-for=\"star in 5\" \r\n          :key=\"star\"\r\n          :class=\"{ active: star <= newReview.rating }\"\r\n          @click=\"newReview.rating = star\"\r\n        >★</span>\r\n      </div>\r\n      <textarea \r\n        v-model=\"newReview.comment\"\r\n        placeholder=\"Yorumunuzu yazın...\"\r\n      ></textarea>\r\n      <button @click=\"submitReview\">Yorum Ekle</button>\r\n    </div>\r\n\r\n    <!-- Yorumlar Listesi -->\r\n    <div class=\"reviews-list\">\r\n      <div v-for=\"review in reviews\" :key=\"review.date\" class=\"review-item\">\r\n        <div class=\"review-header\">\r\n          <div class=\"rating\">\r\n            <span v-for=\"star in 5\" :key=\"star\" :class=\"{ active: star <= review.rating }\">★</span>\r\n          </div>\r\n          <span class=\"date\">{{ formatDate(review.date) }}</span>\r\n        </div>\r\n        <p class=\"comment\">{{ review.comment }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'BookReviews',\r\n  props: {\r\n    bookId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n      newReview: {\r\n        rating: 0,\r\n        comment: ''\r\n      },\r\n      isLoggedIn: true // Gerçek auth sistemine göre değiştirilmeli\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchReviews() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8001/reviews/${this.bookId}`);\r\n        if (response.data && response.data.reviews) {\r\n          this.reviews = response.data.reviews.sort((a, b) => \r\n            new Date(b.date) - new Date(a.date)\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error('Yorumlar alınamadı:', error);\r\n      }\r\n    },\r\n    async submitReview() {\r\n      if (this.newReview.rating === 0) {\r\n        alert('Lütfen bir puan verin');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await axios.post('http://localhost:8001/reviews/add', {\r\n          bookId: this.bookId,\r\n          userId: 'user1',\r\n          rating: this.newReview.rating,\r\n          comment: this.newReview.comment || 'Yorum yok'\r\n        });\r\n\r\n        if (response.data.success) {\r\n          this.newReview.rating = 0;\r\n          this.newReview.comment = '';\r\n          await this.fetchReviews();\r\n          alert('Yorumunuz başarıyla eklendi!');\r\n        } else {\r\n          throw new Error('Yorum eklenemedi');\r\n        }\r\n      } catch (error) {\r\n        console.error('Yorum eklenemedi:', error);\r\n        alert('Yorum eklenirken bir hata oluştu!');\r\n      }\r\n    },\r\n    formatDate(dateStr) {\r\n      return new Date(dateStr).toLocaleDateString('tr-TR');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchReviews();\r\n    // Her 30 saniyede bir yorumları güncelle\r\n    this.reviewInterval = setInterval(() => {\r\n      this.fetchReviews();\r\n    }, 30000);\r\n  },\r\n  beforeUnmount() {\r\n    if (this.reviewInterval) {\r\n      clearInterval(this.reviewInterval);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reviews-section {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.review-form {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.rating {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.rating span {\r\n  font-size: 24px;\r\n  color: #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\n.rating span.active {\r\n  color: #ffd700;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  min-height: 100px;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.review-item {\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  border: 1px solid #eee;\r\n  border-radius: 5px;\r\n}\r\n\r\n.review-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.date {\r\n  color: #666;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.comment {\r\n  margin: 0;\r\n  line-height: 1.4;\r\n}\r\n</style> ",{"ruleId":null,"fatal":true,"severity":2,"message":"50"},{"ruleId":null,"fatal":true,"severity":2,"message":"51"},{"ruleId":null,"fatal":true,"severity":2,"message":"52"},{"ruleId":null,"fatal":true,"severity":2,"message":"53"},{"ruleId":null,"fatal":true,"severity":2,"message":"54"},{"ruleId":null,"fatal":true,"severity":2,"message":"55"},{"ruleId":null,"fatal":true,"severity":2,"message":"56"},{"ruleId":null,"fatal":true,"severity":2,"message":"57"},"Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\main.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\App.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\router\\index.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\store\\index.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\LoginPage.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\views\\AdminPanel.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.","Parsing error: No Babel config file detected for C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\SOA\\project-apis\\project-apis\\kitap-sistemi\\src\\components\\BookReviews.vue. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files."]