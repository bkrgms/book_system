{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-panel\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"Admin Panel\", -1 /* HOISTED */)), _createCommentVNode(\" Kitap Ekleme Formu \"), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Yeni Kitap Ekle\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.addBook && $options.addBook(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newBook.title = $event),\n    type: \"text\",\n    placeholder: \"Kitap Adı\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newBook.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newBook.author = $event),\n    type: \"text\",\n    placeholder: \"Yazar\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newBook.author]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newBook.genre = $event),\n    type: \"text\",\n    placeholder: \"Tür\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newBook.genre]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newBook.pages = $event),\n    type: \"number\",\n    placeholder: \"Sayfa Sayısı\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newBook.pages]]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Ekle\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" Kitap Listesi \"), _createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Kitap Listesi\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Kitap Adı\"), _createElementVNode(\"th\", null, \"Yazar\"), _createElementVNode(\"th\", null, \"Tür\"), _createElementVNode(\"th\", null, \"Sayfa Sayısı\"), _createElementVNode(\"th\", null, \"İşlemler\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.books, book => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: book.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(book.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(book.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(book.author), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(book.genre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(book.pages), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteBook(book.id)\n    }, \"Sil\", 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","addBook","$event","$data","newBook","title","type","placeholder","required","author","genre","pages","_Fragment","_renderList","books","book","key","id","_toDisplayString","onClick","deleteBook","_hoisted_2"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\views\\AdminPanel.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-panel\">\r\n      <h1>Admin Panel</h1>\r\n  \r\n      <!-- Kitap Ekleme Formu -->\r\n      <div>\r\n        <h2>Yeni Kitap Ekle</h2>\r\n        <form @submit.prevent=\"addBook\">\r\n          <input v-model=\"newBook.title\" type=\"text\" placeholder=\"Kitap Adı\" required />\r\n          <input v-model=\"newBook.author\" type=\"text\" placeholder=\"Yazar\" required />\r\n          <input v-model=\"newBook.genre\" type=\"text\" placeholder=\"Tür\" required />\r\n          <input v-model=\"newBook.pages\" type=\"number\" placeholder=\"Sayfa Sayısı\" required />\r\n          <button type=\"submit\">Ekle</button>\r\n        </form>\r\n      </div>\r\n  \r\n      <!-- Kitap Listesi -->\r\n      <div>\r\n        <h2>Kitap Listesi</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Kitap Adı</th>\r\n              <th>Yazar</th>\r\n              <th>Tür</th>\r\n              <th>Sayfa Sayısı</th>\r\n              <th>İşlemler</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"book in books\" :key=\"book.id\">\r\n              <td>{{ book.id }}</td>\r\n              <td>{{ book.title }}</td>\r\n              <td>{{ book.author }}</td>\r\n              <td>{{ book.genre }}</td>\r\n              <td>{{ book.pages }}</td>\r\n              <td>\r\n                <button @click=\"deleteBook(book.id)\">Sil</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        books: [], // Kitap listesi\r\n        newBook: {\r\n          title: \"\",\r\n          author: \"\",\r\n          genre: \"\",\r\n          pages: 0,\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      // Kitap Ekleme\r\n      async addBook() {\r\n        try {\r\n          const response = await axios.post(\"http://localhost:8000/wsdl\", {\r\n            title: this.newBook.title,\r\n            author: this.newBook.author,\r\n            genre: this.newBook.genre,\r\n            pages: this.newBook.pages,\r\n          });\r\n          alert(\"Kitap başarıyla eklendi!\");\r\n          this.newBook = { title: \"\", author: \"\", genre: \"\", pages: 0 };\r\n          this.fetchBooks(); // Listeyi yenile\r\n        } catch (error) {\r\n          console.error(\"Kitap ekleme hatası:\", error);\r\n          alert(\"Kitap eklenemedi.\");\r\n        }\r\n      },\r\n  \r\n      // Kitap Silme\r\n      async deleteBook(id) {\r\n        try {\r\n          await axios.delete(`http://localhost:8000/wsdl/${id}`);\r\n          alert(\"Kitap başarıyla silindi!\");\r\n          this.fetchBooks(); // Listeyi yenile\r\n        } catch (error) {\r\n          console.error(\"Kitap silme hatası:\", error);\r\n          alert(\"Kitap silinemedi.\");\r\n        }\r\n      },\r\n  \r\n      // Kitapları Getirme\r\n      async fetchBooks() {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:8000/wsdl\");\r\n          this.books = response.data;\r\n        } catch (error) {\r\n          console.error(\"Kitapları getirme hatası:\", error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchBooks(); // Sayfa yüklendiğinde kitapları çek\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .admin-panel {\r\n    padding: 20px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th, td {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    text-align: left;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}