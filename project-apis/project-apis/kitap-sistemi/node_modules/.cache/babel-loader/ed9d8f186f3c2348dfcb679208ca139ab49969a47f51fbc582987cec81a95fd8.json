{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      books: []\n    };\n  },\n  created() {\n    this.fetchBooks(); // API'den kitapları çekme\n  },\n  methods: {\n    async fetchBooks() {\n      try {\n        const response = await axios.get('API_ENDPOINT_HERE'); // Buraya API URL'nizi yazın\n        this.books = response.data.items; // API'den gelen kitapları `books` dizisine atıyoruz\n      } catch (error) {\n        console.error('API çağrısı sırasında bir hata oluştu:', error);\n      }\n    }\n  },\n  computed: {\n    filteredBooks() {\n      if (!this.searchQuery) {\n        return this.books; // Eğer arama kutusu boşsa, tüm kitapları göster\n      }\n      return this.books.filter(book => {\n        // Arama kutusundaki değere göre kitapları filtrele\n        return book.volumeInfo.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.volumeInfo.authors && book.volumeInfo.authors.join(', ').toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","books","created","fetchBooks","methods","response","get","items","error","console","computed","filteredBooks","filter","book","volumeInfo","title","toLowerCase","includes","authors","join"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\components\\BooksList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Kitap adı, yazar veya tür ile ara\"\r\n        class=\"search-bar\"\r\n      />\r\n      <div class=\"book-list\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <img :src=\"book.volumeInfo.imageLinks?.thumbnail\" alt=\"Book Cover\" />\r\n          <div>\r\n            <h3>{{ book.volumeInfo.title }}</h3>\r\n            <p>{{ book.volumeInfo.authors?.join(', ') }}</p>\r\n            <router-link :to=\"'/book-details/' + book.id\" class=\"view-details\">Detayları Gör</router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        searchQuery: '',\r\n        books: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchBooks(); // API'den kitapları çekme\r\n    },\r\n    methods: {\r\n      async fetchBooks() {\r\n        try {\r\n          const response = await axios.get('API_ENDPOINT_HERE'); // Buraya API URL'nizi yazın\r\n          this.books = response.data.items; // API'den gelen kitapları `books` dizisine atıyoruz\r\n        } catch (error) {\r\n          console.error('API çağrısı sırasında bir hata oluştu:', error);\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      filteredBooks() {\r\n        if (!this.searchQuery) {\r\n          return this.books; // Eğer arama kutusu boşsa, tüm kitapları göster\r\n        }\r\n        return this.books.filter(book => {\r\n          // Arama kutusundaki değere göre kitapları filtrele\r\n          return (\r\n            book.volumeInfo.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            (book.volumeInfo.authors && book.volumeInfo.authors.join(', ').toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n          );\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .search-bar {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .book-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .book-card {\r\n    width: 200px;\r\n    margin: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .book-card img {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .view-details {\r\n    display: block;\r\n    margin-top: 10px;\r\n    text-decoration: none;\r\n    color: #007bff;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AAsBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,mBAAmB,CAAC,EAAE;QACvD,IAAI,CAACL,KAAI,GAAII,QAAQ,CAACN,IAAI,CAACQ,KAAK,EAAE;MACpC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF;EACF,CAAC;EACDE,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACX,WAAW,EAAE;QACrB,OAAO,IAAI,CAACC,KAAK,EAAE;MACrB;MACA,OAAO,IAAI,CAACA,KAAK,CAACW,MAAM,CAACC,IAAG,IAAK;QAC/B;QACA,OACEA,IAAI,CAACC,UAAU,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACjB,WAAW,CAACgB,WAAW,CAAC,CAAC,KAC1EH,IAAI,CAACC,UAAU,CAACI,OAAM,IAAKL,IAAI,CAACC,UAAU,CAACI,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACjB,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC;MAEzH,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}