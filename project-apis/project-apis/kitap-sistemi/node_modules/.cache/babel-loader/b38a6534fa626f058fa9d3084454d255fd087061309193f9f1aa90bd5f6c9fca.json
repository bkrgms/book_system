{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport grpc from \"@grpc/grpc-js\";\nimport protoLoader from \"@grpc/proto-loader\";\nexport default {\n  data() {\n    return {\n      books: [],\n      // API'den çekilen kitaplar\n      searchQuery: \"\",\n      // Arama kutusundaki sorgu\n      currentPage: 1,\n      // Geçerli sayfa\n      itemsPerPage: 20 // Bir sayfada gösterilecek kitap sayısı\n    };\n  },\n  computed: {\n    filteredBooks() {\n      // Arama sonuçlarını filtrele\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.books.slice(start, end);\n    },\n    totalPages() {\n      // Toplam sayfa sayısını hesapla\n      return Math.ceil(this.books.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    async fetchBooks() {\n      try {\n        const protoPath = \"/path/to/book.proto\"; // Protobuf dosyasının yolu\n        const packageDefinition = protoLoader.loadSync(protoPath);\n        const BookService = grpc.loadPackageDefinition(packageDefinition).BookService;\n        const client = new BookService(\"localhost:50051\", grpc.credentials.createInsecure());\n        client.SearchBooks({\n          keyword: this.searchQuery\n        }, (err, response) => {\n          if (err) {\n            console.error(\"Arama sırasında hata oluştu:\", err);\n          } else {\n            this.books = response.books.map(book => ({\n              id: book.id,\n              title: book.title,\n              author: book.author,\n              image: book.image || \"https://via.placeholder.com/150x225\"\n            }));\n          }\n        });\n      } catch (error) {\n        console.error(\"gRPC API'ye bağlanırken hata oluştu:\", error);\n      }\n    },\n    searchBooks() {\n      this.fetchBooks(); // Arama sorgusunu tetikleyin\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    logout() {\n      alert(\"Çıkış yapıldı.\");\n      this.$router.push(\"/\"); // Giriş sayfasına yönlendirme\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1; // Arama yapıldığında sayfa numarasını sıfırla\n      this.searchBooks(); // Aramayı tetikleyin\n    }\n  }\n};","map":{"version":3,"names":["grpc","protoLoader","data","books","searchQuery","currentPage","itemsPerPage","computed","filteredBooks","start","end","slice","totalPages","Math","ceil","length","methods","fetchBooks","protoPath","packageDefinition","loadSync","BookService","loadPackageDefinition","client","credentials","createInsecure","SearchBooks","keyword","err","response","console","error","map","book","id","title","author","image","searchBooks","prevPage","nextPage","logout","alert","$router","push","watch"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <!-- Navbar -->\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n        @input=\"searchBooks\" \r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <!-- Kitap Grid -->\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div\r\n          v-for=\"book in filteredBooks\"\r\n          :key=\"book.id\"\r\n          class=\"book-card\"\r\n        >\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button\r\n        class=\"page-button\"\r\n        :disabled=\"currentPage === 1\"\r\n        @click=\"prevPage\"\r\n      >\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button\r\n        class=\"page-button\"\r\n        :disabled=\"currentPage === totalPages\"\r\n        @click=\"nextPage\"\r\n      >\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport grpc from \"@grpc/grpc-js\";\r\nimport protoLoader from \"@grpc/proto-loader\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [], // API'den çekilen kitaplar\r\n      searchQuery: \"\", // Arama kutusundaki sorgu\r\n      currentPage: 1, // Geçerli sayfa\r\n      itemsPerPage: 20, // Bir sayfada gösterilecek kitap sayısı\r\n    };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      // Arama sonuçlarını filtrele\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.books.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      // Toplam sayfa sayısını hesapla\r\n      return Math.ceil(this.books.length / this.itemsPerPage);\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n      try {\r\n        const protoPath = \"/path/to/book.proto\"; // Protobuf dosyasının yolu\r\n        const packageDefinition = protoLoader.loadSync(protoPath);\r\n        const BookService = grpc.loadPackageDefinition(packageDefinition).BookService;\r\n\r\n        const client = new BookService(\r\n          \"localhost:50051\",\r\n          grpc.credentials.createInsecure()\r\n        );\r\n\r\n        client.SearchBooks({ keyword: this.searchQuery }, (err, response) => {\r\n          if (err) {\r\n            console.error(\"Arama sırasında hata oluştu:\", err);\r\n          } else {\r\n            this.books = response.books.map((book) => ({\r\n              id: book.id,\r\n              title: book.title,\r\n              author: book.author,\r\n              image: book.image || \"https://via.placeholder.com/150x225\",\r\n            }));\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"gRPC API'ye bağlanırken hata oluştu:\", error);\r\n      }\r\n    },\r\n    searchBooks() {\r\n      this.fetchBooks(); // Arama sorgusunu tetikleyin\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      alert(\"Çıkış yapıldı.\");\r\n      this.$router.push(\"/\"); // Giriş sayfasına yönlendirme\r\n    },\r\n  },\r\n  watch: {\r\n    searchQuery() {\r\n      this.currentPage = 1; // Arama yapıldığında sayfa numarasını sıfırla\r\n      this.searchBooks(); // Aramayı tetikleyin\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Stil kodlarınız değişmeden devam ediyor */\r\n</style>\r\n\r\n\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;AAsDA,OAAOA,IAAG,MAAO,eAAe;AAChC,OAAOC,WAAU,MAAO,oBAAoB;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,WAAW,EAAE,EAAE;MAAE;MACjBC,WAAW,EAAE,CAAC;MAAE;MAChBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd;MACA,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACJ,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMI,GAAE,GAAID,KAAI,GAAI,IAAI,CAACH,YAAY;MACrC,OAAO,IAAI,CAACH,KAAK,CAACQ,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACrC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX;MACA,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,MAAK,GAAI,IAAI,CAACT,YAAY,CAAC;IACzD;EACF,CAAC;EACDU,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,SAAQ,GAAI,qBAAqB,EAAE;QACzC,MAAMC,iBAAgB,GAAIlB,WAAW,CAACmB,QAAQ,CAACF,SAAS,CAAC;QACzD,MAAMG,WAAU,GAAIrB,IAAI,CAACsB,qBAAqB,CAACH,iBAAiB,CAAC,CAACE,WAAW;QAE7E,MAAME,MAAK,GAAI,IAAIF,WAAW,CAC5B,iBAAiB,EACjBrB,IAAI,CAACwB,WAAW,CAACC,cAAc,CAAC,CAClC,CAAC;QAEDF,MAAM,CAACG,WAAW,CAAC;UAAEC,OAAO,EAAE,IAAI,CAACvB;QAAY,CAAC,EAAE,CAACwB,GAAG,EAAEC,QAAQ,KAAK;UACnE,IAAID,GAAG,EAAE;YACPE,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEH,GAAG,CAAC;UACpD,OAAO;YACL,IAAI,CAACzB,KAAI,GAAI0B,QAAQ,CAAC1B,KAAK,CAAC6B,GAAG,CAAEC,IAAI,KAAM;cACzCC,EAAE,EAAED,IAAI,CAACC,EAAE;cACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;cACjBC,MAAM,EAAEH,IAAI,CAACG,MAAM;cACnBC,KAAK,EAAEJ,IAAI,CAACI,KAAI,IAAK;YACvB,CAAC,CAAC,CAAC;UACL;QACF,CAAC,CAAC;MACJ,EAAE,OAAON,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACrB,UAAU,CAAC,CAAC,EAAE;IACrB,CAAC;IACDsB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAClC,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDmC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACnC,WAAU,GAAI,IAAI,CAACO,UAAU,EAAE;QACtC,IAAI,CAACP,WAAW,EAAE;MACpB;IACF,CAAC;IACDoC,MAAMA,CAAA,EAAG;MACPC,KAAK,CAAC,gBAAgB,CAAC;MACvB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC1B;EACF,CAAC;EACDC,KAAK,EAAE;IACLzC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,WAAU,GAAI,CAAC,EAAE;MACtB,IAAI,CAACiC,WAAW,CAAC,CAAC,EAAE;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}