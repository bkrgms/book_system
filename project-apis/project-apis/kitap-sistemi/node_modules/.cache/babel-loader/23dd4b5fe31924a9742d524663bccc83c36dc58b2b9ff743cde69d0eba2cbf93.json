{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-page\"\n};\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  class: \"book-grid-container\"\n};\nconst _hoisted_5 = {\n  class: \"book-grid\"\n};\nconst _hoisted_6 = {\n  class: \"book-image\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"book-title\"\n};\nconst _hoisted_9 = {\n  class: \"book-author\"\n};\nconst _hoisted_10 = {\n  class: \"pagination\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"nav\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"project-name\"\n  }, \"Kitap Bul\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Kitap veya yazar ara...\",\n    class: \"search-input\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.handleSearch && $options.handleSearch(...args)),\n    disabled: !$data.isGrpcRunning\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.logout && $options.logout(...args))\n  }, \"Çıkış Yap\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredBooks, book => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: book.id,\n      class: \"book-card\"\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: book.image,\n      alt: \"Kitap Kapağı\"\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(book.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(book.author), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Sayfalama \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"page-button\",\n    disabled: $data.currentPage === 1,\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.prevPage && $options.prevPage(...args))\n  }, \" Önceki \", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"span\", null, \"Sayfa \" + _toDisplayString($data.currentPage) + \" / \" + _toDisplayString($options.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"page-button\",\n    disabled: $data.currentPage === $options.totalPages,\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.nextPage && $options.nextPage(...args))\n  }, \" Sonraki \", 8 /* PROPS */, _hoisted_12)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$data","searchQuery","type","placeholder","onInput","args","$options","handleSearch","disabled","isGrpcRunning","_hoisted_3","onClick","logout","_hoisted_4","_hoisted_5","_Fragment","_renderList","filteredBooks","book","key","id","_hoisted_6","src","image","alt","_hoisted_7","_hoisted_8","_toDisplayString","title","_hoisted_9","author","_createCommentVNode","_hoisted_10","currentPage","prevPage","_hoisted_11","totalPages","nextPage","_hoisted_12"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n        @input=\"handleSearch\"\r\n        :disabled=\"!isGrpcRunning\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div v-for=\"book in filteredBooks\" :key=\"book.id\" class=\"book-card\">\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button class=\"page-button\" :disabled=\"currentPage === 1\" @click=\"prevPage\">\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"page-button\" :disabled=\"currentPage === totalPages\" @click=\"nextPage\">\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { getCurrentInstance } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n      maxBooks: 30,\r\n      isGrpcRunning: true,\r\n      grpcErrorShown: false\r\n    };\r\n  },\r\n  setup() {\r\n    const app = getCurrentInstance();\r\n    const emitter = app.appContext.config.globalProperties.emitter;\r\n    return { emitter };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      \r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      const searchResults = this.books.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      return Math.max(1, Math.ceil(searchResults.length / this.itemsPerPage));\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n      try {\r\n        // Önce admin kitaplarını kontrol et\r\n        const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n        \r\n        // Eğer admin kitapları varsa, onları kullan\r\n        if (adminBooks.length > 0) {\r\n          this.allBooks = adminBooks;\r\n          this.books = [...adminBooks];\r\n          return;\r\n        }\r\n        \r\n        // Admin kitapları yoksa API'den çek\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=sherlock+holmes+doyle&orderBy=relevance&maxResults=40\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        \r\n        // Benzersiz kitapları filtrele\r\n        const uniqueBooks = [];\r\n        const usedImages = new Set();\r\n        let id = 1;\r\n        \r\n        // maxBooks değişkenini kullan\r\n        for (const item of rawBooks) {\r\n          if (uniqueBooks.length >= this.maxBooks) break;\r\n          \r\n          if (item.volumeInfo.imageLinks) {\r\n            const imageUrl = item.volumeInfo.imageLinks.thumbnail;\r\n            const title = item.volumeInfo.title || \"Bilinmeyen Başlık\";\r\n            const author = item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\";\r\n            \r\n            const isDuplicate = usedImages.has(imageUrl) || \r\n              uniqueBooks.some(book => \r\n                book.title.toLowerCase() === title.toLowerCase() &&\r\n                book.author.toLowerCase() === author.toLowerCase()\r\n              );\r\n            \r\n            if (!isDuplicate) {\r\n              usedImages.add(imageUrl);\r\n              uniqueBooks.push({\r\n                id: id++,\r\n                title: title,\r\n                author: author,\r\n                image: imageUrl,\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        this.allBooks = uniqueBooks;\r\n        this.books = [...uniqueBooks];\r\n        \r\n        // Kitapları localStorage'a kaydet\r\n        localStorage.setItem('adminBooks', JSON.stringify(uniqueBooks));\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    logout() {\r\n      this.$router.push(\"/\");\r\n    },\r\n    // Kitapları yeniden yükleme metodu\r\n    refreshBooks() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      this.books = [...adminBooks];\r\n      \r\n      if ((this.currentPage - 1) * this.itemsPerPage >= this.books.length) {\r\n        this.currentPage = 1;\r\n      }\r\n    },\r\n    async handleSearch() {\r\n      if (this.searchQuery.length >= 2) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/search?query=${this.searchQuery}`);\r\n          \r\n          // Sunucu çalışıyorsa ve sonuç varsa göster\r\n          if (response.data && response.data.books) {\r\n            this.books = response.data.books;\r\n            this.isGrpcRunning = true;\r\n            this.grpcErrorShown = false;\r\n          }\r\n        } catch (error) {\r\n          // Network Error: client.js çalışmıyor\r\n          // response status 503: server.js çalışmıyor\r\n          if (error.message.includes('Network Error') || \r\n              (error.response && error.response.status === 503 && error.response.data.serverError)) {\r\n            this.isGrpcRunning = false;\r\n            if (!this.grpcErrorShown) {\r\n              alert('gRPC sunucusu çalışmadığından arama kısmı kullanılamıyor');\r\n              this.grpcErrorShown = true;\r\n              this.searchQuery = '';\r\n            }\r\n          }\r\n        }\r\n      } else if (this.searchQuery.length === 0) {\r\n        this.refreshBooks();\r\n        this.grpcErrorShown = false;\r\n      }\r\n    },\r\n    // Sayfa yüklendiğinde sunucu durumunu kontrol et\r\n    async checkGrpcServer() {\r\n      try {\r\n        const d = await axios.get('http://localhost:3000/search?query=');\r\n        this.isGrpcRunning = true;\r\n        this.grpcErrorShown = false;\r\n      } catch (error) {\r\n        // Network Error: client.js çalışmıyor\r\n        // response status 503: server.js çalışmıyor\r\n        if (error.message.includes('Network Error') || \r\n            (error.response && error.response.status === 503 && error.response.data.serverError)) {\r\n          this.isGrpcRunning = false;\r\n          if (!this.grpcErrorShown) {\r\n            alert('gRPC sunucularından biri çalışmadığından arama kısmı kullanılamıyor');\r\n            this.grpcErrorShown = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks();\r\n    this.checkGrpcServer(); // İlk kontrol\r\n    \r\n    // Her 5 saniyede bir sunucuları kontrol et\r\n    this.serverCheckInterval = setInterval(() => {\r\n      this.checkGrpcServer();\r\n    }, 5000);\r\n\r\n    // Admin panelinden gelen güncellemeleri dinle\r\n    this.emitter.on('books-updated', () => {\r\n      this.refreshBooks();\r\n    });\r\n  },\r\n  unmounted() {\r\n    // Interval'i temizle\r\n    if (this.serverCheckInterval) {\r\n      clearInterval(this.serverCheckInterval);\r\n    }\r\n    // Event listener'ı temizle\r\n    this.emitter.off('books-updated');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.search-input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAQ;mBAFvB;;EAeSA,KAAK,EAAC;AAAqB;;EACzBA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAY;mBAlBjC;;EAqBeA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAa;;EAMzBA,KAAK,EAAC;AAAY;oBA5B3B;oBAAA;;uBACEC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAWM,OAXNC,UAWM,G,0BAVJD,mBAAA,CAA2C;IAArCH,KAAK,EAAC;EAAc,GAAC,WAAS,sB,gBACpCG,mBAAA,CAOE;IAXR,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,yBAAyB;IACrCV,KAAK,EAAC,cAAc;IACnBW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IACnBG,QAAQ,GAAGR,KAAA,CAAAS;2CAVpBC,UAAA,I,cAKiBV,KAAA,CAAAC,WAAW,E,GAOtBL,mBAAA,CAAgE;IAAxDH,KAAK,EAAC,eAAe;IAAEkB,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAM,MAAA,IAAAN,QAAA,CAAAM,MAAA,IAAAP,IAAA,CAAM;KAAE,WAAS,E,GAGzDT,mBAAA,CAUM,OAVNiB,UAUM,GATJjB,mBAAA,CAQM,OARNkB,UAQM,I,kBAPJpB,mBAAA,CAMMqB,SAAA,QAvBdC,WAAA,CAiB4BV,QAAA,CAAAW,aAAa,EAArBC,IAAI;yBAAhBxB,mBAAA,CAMM;MAN8ByB,GAAG,EAAED,IAAI,CAACE,EAAE;MAAE3B,KAAK,EAAC;QACtDG,mBAAA,CAEM,OAFNyB,UAEM,GADJzB,mBAAA,CAA4C;MAAtC0B,GAAG,EAAEJ,IAAI,CAACK,KAAK;MAAEC,GAAG,EAAC;4BAnBvCC,UAAA,E,GAqBU7B,mBAAA,CAA8C,OAA9C8B,UAA8C,EAAAC,gBAAA,CAAnBT,IAAI,CAACU,KAAK,kBACrChC,mBAAA,CAAgD,OAAhDiC,UAAgD,EAAAF,gBAAA,CAApBT,IAAI,CAACY,MAAM,iB;sCAK7CC,mBAAA,eAAkB,EAClBnC,mBAAA,CAQM,OARNoC,WAQM,GAPJpC,mBAAA,CAES;IAFDH,KAAK,EAAC,aAAa;IAAEe,QAAQ,EAAER,KAAA,CAAAiC,WAAW;IAAStB,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAA4B,QAAA,IAAA5B,QAAA,CAAA4B,QAAA,IAAA7B,IAAA,CAAQ;KAAE,UAE5E,iBA/BN8B,WAAA,GAgCMvC,mBAAA,CAAuD,cAAjD,QAAM,GAAA+B,gBAAA,CAAG3B,KAAA,CAAAiC,WAAW,IAAG,KAAG,GAAAN,gBAAA,CAAGrB,QAAA,CAAA8B,UAAU,kBAC7CxC,mBAAA,CAES;IAFDH,KAAK,EAAC,aAAa;IAAEe,QAAQ,EAAER,KAAA,CAAAiC,WAAW,KAAK3B,QAAA,CAAA8B,UAAU;IAAGzB,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAA+B,QAAA,IAAA/B,QAAA,CAAA+B,QAAA,IAAAhC,IAAA,CAAQ;KAAE,WAErF,iBAnCNiC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}