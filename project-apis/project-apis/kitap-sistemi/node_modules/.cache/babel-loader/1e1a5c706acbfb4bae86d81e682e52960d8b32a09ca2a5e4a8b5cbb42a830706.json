{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      books: [],\n      allBooks: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      itemsPerPage: 20\n    };\n  },\n  computed: {\n    filteredBooks() {\n      // Admin panelinden gelen kitapları da dahil et\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const allBooks = [...this.allBooks, ...adminBooks];\n      const searchResults = allBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return searchResults.slice(start, end);\n    },\n    totalPages() {\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\n      const allBooks = [...this.allBooks, ...adminBooks];\n      const searchResults = allBooks.filter(book => book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || book.author.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      return Math.ceil(searchResults.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    async fetchBooks() {\n      try {\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=classic+literature+OR+world+famous+books&maxResults=40\");\n        const rawBooks = response.data.items || [];\n        this.allBooks = rawBooks.filter(item => item.volumeInfo.imageLinks).slice(0, 34).map((item, index) => ({\n          id: index + 1,\n          title: item.volumeInfo.title || \"Bilinmeyen Başlık\",\n          author: item.volumeInfo.authors ? item.volumeInfo.authors[0] : \"Bilinmeyen Yazar\",\n          image: item.volumeInfo.imageLinks.thumbnail\n        }));\n        this.books = [...this.allBooks];\n      } catch (error) {\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    resetPagination() {\n      // Sayfa numarasını sıfırla\n      this.currentPage = 1;\n    },\n    logout() {\n      alert(\"Çıkış yapıldı.\");\n      this.$router.push(\"/\"); // Giriş sayfasına yönlendirme\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.resetPagination(); // Arama değiştiğinde sayfa sıfırlanır\n    }\n  },\n  mounted() {\n    this.fetchBooks(); // API'den kitapları çek\n  }\n};","map":{"version":3,"names":["axios","data","books","allBooks","searchQuery","currentPage","itemsPerPage","computed","filteredBooks","adminBooks","JSON","parse","localStorage","getItem","searchResults","filter","book","title","toLowerCase","includes","author","start","end","slice","totalPages","Math","ceil","length","methods","fetchBooks","response","get","rawBooks","items","item","volumeInfo","imageLinks","map","index","id","authors","image","thumbnail","error","console","prevPage","nextPage","resetPagination","logout","alert","$router","push","watch","mounted"],"sources":["C:\\Users\\bekir\\Desktop\\project-apis\\kitap-sistemi\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <!-- Navbar -->\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Kitap Bul</span>\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Kitap veya yazar ara...\"\r\n        class=\"search-input\"\r\n      />\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <!-- Kitap Grid -->\r\n    <div class=\"book-grid-container\">\r\n      <div class=\"book-grid\">\r\n        <div\r\n          v-for=\"book in filteredBooks\"\r\n          :key=\"book.id\"\r\n          class=\"book-card\"\r\n        >\r\n          <div class=\"book-image\">\r\n            <img :src=\"book.image\" alt=\"Kitap Kapağı\" />\r\n          </div>\r\n          <div class=\"book-title\">{{ book.title }}</div>\r\n          <div class=\"book-author\">{{ book.author }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div class=\"pagination\">\r\n      <button\r\n        class=\"page-button\"\r\n        :disabled=\"currentPage === 1\"\r\n        @click=\"prevPage\"\r\n      >\r\n        Önceki\r\n      </button>\r\n      <span>Sayfa {{ currentPage }} / {{ totalPages }}</span>\r\n      <button\r\n        class=\"page-button\"\r\n        :disabled=\"currentPage === totalPages\"\r\n        @click=\"nextPage\"\r\n      >\r\n        Sonraki\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      allBooks: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 20,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      // Admin panelinden gelen kitapları da dahil et\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const allBooks = [...this.allBooks, ...adminBooks];\r\n      \r\n      const searchResults = allBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return searchResults.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      const adminBooks = JSON.parse(localStorage.getItem('adminBooks')) || [];\r\n      const allBooks = [...this.allBooks, ...adminBooks];\r\n      \r\n      const searchResults = allBooks.filter(\r\n        (book) =>\r\n          book.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          book.author.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n      return Math.ceil(searchResults.length / this.itemsPerPage);\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://www.googleapis.com/books/v1/volumes?q=classic+literature+OR+world+famous+books&maxResults=40\"\r\n        );\r\n        const rawBooks = response.data.items || [];\r\n        this.allBooks = rawBooks\r\n          .filter((item) => item.volumeInfo.imageLinks)\r\n          .slice(0, 34)\r\n          .map((item, index) => ({\r\n            id: index + 1,\r\n            title: item.volumeInfo.title || \"Bilinmeyen Başlık\",\r\n            author: item.volumeInfo.authors\r\n              ? item.volumeInfo.authors[0]\r\n              : \"Bilinmeyen Yazar\",\r\n            image: item.volumeInfo.imageLinks.thumbnail,\r\n          }));\r\n        this.books = [...this.allBooks];\r\n      } catch (error) {\r\n        console.error(\"Kitaplar alınırken bir hata oluştu:\", error);\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    resetPagination() {\r\n      // Sayfa numarasını sıfırla\r\n      this.currentPage = 1;\r\n    },\r\n    logout() {\r\n      alert(\"Çıkış yapıldı.\");\r\n      this.$router.push(\"/\"); // Giriş sayfasına yönlendirme\r\n    },\r\n  },\r\n  watch: {\r\n    searchQuery() {\r\n      this.resetPagination(); // Arama değiştiğinde sayfa sıfırlanır\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchBooks(); // API'den kitapları çek\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n.home-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 10px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n  padding: 10px 15px;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Grid */\r\n.book-grid-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.book-image {\r\n  height: 225px;\r\n  width: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.book-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.book-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 5px 0;\r\n}\r\n\r\n.book-author {\r\n  font-size: 14px;\r\n  padding: 5px 0;\r\n  color: #555;\r\n}\r\n\r\n/* Sayfalama */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-button {\r\n  padding: 5px 15px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.page-button:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.page-button:hover:enabled {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}