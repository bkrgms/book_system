{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      books: [],\n      // SOAP API'den alınan kitaplar\n      showEditModal: false,\n      editBook: {\n        id: \"\",\n        title: \"\",\n        author: \"\"\n      }\n    };\n  },\n  methods: {\n    async fetchBooks() {\n      try {\n        const response = await axios.post(\"http://localhost:8001/wsdl\", {\n          method: \"fetchBooks\"\n        });\n        console.log(\"SOAP Yanıtı:\", response.data);\n\n        // SOAP yanıtı genellikle string olarak gelir, bu yüzden JSON.parse gerekebilir.\n        const parsedBooks = JSON.parse(response.data.books);\n        this.books = parsedBooks || [];\n      } catch (error) {\n        console.error(\"Kitaplar alınırken hata oluştu:\", error);\n      }\n    },\n    openEditModal(book) {\n      this.editBook = {\n        ...book\n      };\n      this.showEditModal = true;\n    },\n    async saveEdit() {\n      try {\n        const response = await axios.post(\"http://localhost:8001/wsdl\", {\n          method: \"editBook\",\n          id: this.editBook.id,\n          title: this.editBook.title,\n          author: this.editBook.author\n        });\n        if (response.data.success) {\n          alert(\"Kitap başarıyla güncellendi!\");\n          this.fetchBooks(); // Güncellenen kitapları yeniden al\n        } else {\n          alert(\"Güncelleme başarısız: \" + response.data.message);\n        }\n        this.closeEditModal();\n      } catch (error) {\n        console.error(\"Güncelleme hatası:\", error);\n      }\n    },\n    async deleteBook(id) {\n      try {\n        const response = await axios.post(\"http://localhost:8001/wsdl\", {\n          method: \"deleteBook\",\n          id: id\n        });\n        if (response.data.success) {\n          alert(\"Kitap başarıyla silindi!\");\n          this.fetchBooks(); // Silinen kitapları yeniden al\n        } else {\n          alert(\"Silme işlemi başarısız: \" + response.data.message);\n        }\n      } catch (error) {\n        console.error(\"Silme hatası:\", error);\n      }\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editBook = {\n        id: \"\",\n        title: \"\",\n        author: \"\"\n      };\n    },\n    logout() {\n      alert(\"Çıkış yapılıyor!\");\n      this.$router.push(\"/\");\n    }\n  },\n  mounted() {\n    this.fetchBooks(); // Sayfa yüklendiğinde kitapları al\n  }\n};","map":{"version":3,"names":["axios","data","books","showEditModal","editBook","id","title","author","methods","fetchBooks","response","post","method","console","log","parsedBooks","JSON","parse","error","openEditModal","book","saveEdit","success","alert","message","closeEditModal","deleteBook","logout","$router","push","mounted"],"sources":["C:\\Users\\bekir\\Desktop\\SoftwareEngineering\\project-apis\\kitap-sistemi\\src\\views\\AdminPanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-panel\">\r\n    <!-- Navbar -->\r\n    <nav class=\"navbar\">\r\n      <span class=\"project-name\">Admin Panel</span>\r\n      <button class=\"logout-button\" @click=\"logout\">Çıkış Yap</button>\r\n    </nav>\r\n\r\n    <!-- Kitap Tablosu -->\r\n    <div class=\"book-list\">\r\n      <h2>Kitap Yönetimi</h2>\r\n      <table class=\"book-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Kitap Adı</th>\r\n            <th>Yazar</th>\r\n            <th>İşlemler</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"book in books\" :key=\"book.id\">\r\n            <td>{{ book.id }}</td>\r\n            <td>{{ book.title }}</td>\r\n            <td>{{ book.author }}</td>\r\n            <td>\r\n              <button @click=\"openEditModal(book)\" class=\"edit-button\">Düzenle</button>\r\n              <button @click=\"deleteBook(book.id)\" class=\"delete-button\">Sil</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Düzenleme Modal -->\r\n    <div v-if=\"showEditModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Kitap Düzenle</h2>\r\n        <form @submit.prevent=\"saveEdit\">\r\n          <div class=\"form-group\">\r\n            <label for=\"id\">ID</label>\r\n            <input v-model=\"editBook.id\" id=\"id\" type=\"text\" readonly />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"title\">Kitap Adı</label>\r\n            <input v-model=\"editBook.title\" id=\"title\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"author\">Yazar</label>\r\n            <input v-model=\"editBook.author\" id=\"author\" type=\"text\" required />\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" class=\"save-button\">Kaydet</button>\r\n            <button type=\"button\" @click=\"closeEditModal\" class=\"cancel-button\">İptal</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [], // SOAP API'den alınan kitaplar\r\n      showEditModal: false,\r\n      editBook: { id: \"\", title: \"\", author: \"\" },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchBooks() {\r\n  try {\r\n    const response = await axios.post(\"http://localhost:8001/wsdl\", {\r\n      method: \"fetchBooks\",\r\n    });\r\n    console.log(\"SOAP Yanıtı:\", response.data);\r\n\r\n    // SOAP yanıtı genellikle string olarak gelir, bu yüzden JSON.parse gerekebilir.\r\n    const parsedBooks = JSON.parse(response.data.books);\r\n    this.books = parsedBooks || [];\r\n  } catch (error) {\r\n    console.error(\"Kitaplar alınırken hata oluştu:\", error);\r\n  }\r\n}\r\n,\r\n    openEditModal(book) {\r\n      this.editBook = { ...book };\r\n      this.showEditModal = true;\r\n    },\r\n    async saveEdit() {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8001/wsdl\", {\r\n          method: \"editBook\",\r\n          id: this.editBook.id,\r\n          title: this.editBook.title,\r\n          author: this.editBook.author,\r\n        });\r\n        if (response.data.success) {\r\n          alert(\"Kitap başarıyla güncellendi!\");\r\n          this.fetchBooks(); // Güncellenen kitapları yeniden al\r\n        } else {\r\n          alert(\"Güncelleme başarısız: \" + response.data.message);\r\n        }\r\n        this.closeEditModal();\r\n      } catch (error) {\r\n        console.error(\"Güncelleme hatası:\", error);\r\n      }\r\n    },\r\n    async deleteBook(id) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8001/wsdl\", {\r\n          method: \"deleteBook\",\r\n          id: id,\r\n        });\r\n        if (response.data.success) {\r\n          alert(\"Kitap başarıyla silindi!\");\r\n          this.fetchBooks(); // Silinen kitapları yeniden al\r\n        } else {\r\n          alert(\"Silme işlemi başarısız: \" + response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Silme hatası:\", error);\r\n      }\r\n    },\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.editBook = { id: \"\", title: \"\", author: \"\" };\r\n    },\r\n    logout() {\r\n      alert(\"Çıkış yapılıyor!\");\r\n      this.$router.push(\"/\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchBooks(); // Sayfa yüklendiğinde kitapları al\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.admin-panel {\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n}\r\n\r\n/* Navbar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.logout-button {\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Kitap Tablosu */\r\n.book-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.book-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.book-table th,\r\n.book-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.edit-button,\r\n.delete-button {\r\n  padding: 5px 10px;\r\n  margin-right: 5px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #ffc107;\r\n  color: white;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n/* Modal */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n  text-align: left;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.modal-actions {\r\n  margin-top: 20px;\r\n}\r\n\r\n.save-button {\r\n  padding: 10px 15px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancel-button {\r\n  padding: 10px 15px;\r\n  background-color: #6c757d;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}