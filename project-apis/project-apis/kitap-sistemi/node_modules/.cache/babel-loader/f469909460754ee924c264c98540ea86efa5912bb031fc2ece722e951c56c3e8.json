{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n  registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n  defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return new registeredResolvers[target.scheme](target, listener, options);\n  } else {\n    throw new Error(`No resolver could be created for target ${(0, uri_parser_1.uriToString)(target)}`);\n  }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return registeredResolvers[target.scheme].getDefaultAuthority(target);\n  } else {\n    throw new Error(`Invalid target ${(0, uri_parser_1.uriToString)(target)}`);\n  }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n  if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n    if (defaultScheme !== null) {\n      return {\n        scheme: defaultScheme,\n        authority: undefined,\n        path: (0, uri_parser_1.uriToString)(target)\n      };\n    } else {\n      return null;\n    }\n  }\n  return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;","map":{"version":3,"names":["uri_parser_1","require","registeredResolvers","defaultScheme","registerResolver","scheme","resolverClass","exports","registerDefaultScheme","createResolver","target","listener","options","undefined","Error","uriToString","getDefaultAuthority","mapUriDefaultScheme","authority","path"],"sources":["../../src/resolver.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAAA,YAAA,GAAAC,OAAA;AAuFA,MAAMC,mBAAmB,GAA8C,EAAE;AACzE,IAAIC,aAAa,GAAkB,IAAI;AAEvC;;;;;;;AAOA,SAAgBC,gBAAgBA,CAC9BC,MAAc,EACdC,aAAkC;EAElCJ,mBAAmB,CAACG,MAAM,CAAC,GAAGC,aAAa;AAC7C;AALAC,OAAA,CAAAH,gBAAA,GAAAA,gBAAA;AAOA;;;;;AAKA,SAAgBI,qBAAqBA,CAACH,MAAc;EAClDF,aAAa,GAAGE,MAAM;AACxB;AAFAE,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAIA;;;;;;AAMA,SAAgBC,cAAcA,CAC5BC,MAAe,EACfC,QAA0B,EAC1BC,OAAuB;EAEvB,IAAIF,MAAM,CAACL,MAAM,KAAKQ,SAAS,IAAIH,MAAM,CAACL,MAAM,IAAIH,mBAAmB,EAAE;IACvE,OAAO,IAAIA,mBAAmB,CAACQ,MAAM,CAACL,MAAM,CAAC,CAACK,MAAM,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EAC1E,CAAC,MAAM;IACL,MAAM,IAAIE,KAAK,CACb,2CAA2C,IAAAd,YAAA,CAAAe,WAAW,EAACL,MAAM,CAAC,EAAE,CACjE;EACH;AACF;AAZAH,OAAA,CAAAE,cAAA,GAAAA,cAAA;AAcA;;;;;AAKA,SAAgBO,mBAAmBA,CAACN,MAAe;EACjD,IAAIA,MAAM,CAACL,MAAM,KAAKQ,SAAS,IAAIH,MAAM,CAACL,MAAM,IAAIH,mBAAmB,EAAE;IACvE,OAAOA,mBAAmB,CAACQ,MAAM,CAACL,MAAM,CAAC,CAACW,mBAAmB,CAACN,MAAM,CAAC;EACvE,CAAC,MAAM;IACL,MAAM,IAAII,KAAK,CAAC,kBAAkB,IAAAd,YAAA,CAAAe,WAAW,EAACL,MAAM,CAAC,EAAE,CAAC;EAC1D;AACF;AANAH,OAAA,CAAAS,mBAAA,GAAAA,mBAAA;AAQA,SAAgBC,mBAAmBA,CAACP,MAAe;EACjD,IAAIA,MAAM,CAACL,MAAM,KAAKQ,SAAS,IAAI,EAAEH,MAAM,CAACL,MAAM,IAAIH,mBAAmB,CAAC,EAAE;IAC1E,IAAIC,aAAa,KAAK,IAAI,EAAE;MAC1B,OAAO;QACLE,MAAM,EAAEF,aAAa;QACrBe,SAAS,EAAEL,SAAS;QACpBM,IAAI,EAAE,IAAAnB,YAAA,CAAAe,WAAW,EAACL,MAAM;OACzB;IACH,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EACA,OAAOA,MAAM;AACf;AAbAH,OAAA,CAAAU,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}