{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/web.immediate.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoadBalancingCall = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst picker_1 = require(\"./picker\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst http2 = require(\"http2\");\nconst TRACER_NAME = 'load_balancing_call';\nclass LoadBalancingCall {\n  constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber) {\n    var _a, _b;\n    this.channel = channel;\n    this.callConfig = callConfig;\n    this.methodName = methodName;\n    this.host = host;\n    this.credentials = credentials;\n    this.deadline = deadline;\n    this.callNumber = callNumber;\n    this.child = null;\n    this.readPending = false;\n    this.pendingMessage = null;\n    this.pendingHalfClose = false;\n    this.ended = false;\n    this.metadata = null;\n    this.listener = null;\n    this.onCallEnded = null;\n    this.childStartTime = null;\n    const splitPath = this.methodName.split('/');\n    let serviceName = '';\n    /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n     * by '/', the first item should be empty and the second should be the\n     * service name */\n    if (splitPath.length >= 2) {\n      serviceName = splitPath[1];\n    }\n    const hostname = (_b = (_a = (0, uri_parser_1.splitHostPort)(this.host)) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : 'localhost';\n    /* Currently, call credentials are only allowed on HTTPS connections, so we\n     * can assume that the scheme is \"https\" */\n    this.serviceUrl = `https://${hostname}/${serviceName}`;\n    this.startTime = new Date();\n  }\n  getDeadlineInfo() {\n    var _a, _b;\n    const deadlineInfo = [];\n    if (this.childStartTime) {\n      if (this.childStartTime > this.startTime) {\n        if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n          deadlineInfo.push('wait_for_ready');\n        }\n        deadlineInfo.push(`LB pick: ${(0, deadline_1.formatDateDifference)(this.startTime, this.childStartTime)}`);\n      }\n      deadlineInfo.push(...this.child.getDeadlineInfo());\n      return deadlineInfo;\n    } else {\n      if ((_b = this.metadata) === null || _b === void 0 ? void 0 : _b.getOptions().waitForReady) {\n        deadlineInfo.push('wait_for_ready');\n      }\n      deadlineInfo.push('Waiting for LB pick');\n    }\n    return deadlineInfo;\n  }\n  trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n  }\n  outputStatus(status, progress) {\n    var _a, _b;\n    if (!this.ended) {\n      this.ended = true;\n      this.trace('ended with status: code=' + status.code + ' details=\"' + status.details + '\" start time=' + this.startTime.toISOString());\n      const finalStatus = Object.assign(Object.assign({}, status), {\n        progress\n      });\n      (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(finalStatus);\n      (_b = this.onCallEnded) === null || _b === void 0 ? void 0 : _b.call(this, finalStatus.code);\n    }\n  }\n  doPick() {\n    var _a, _b;\n    if (this.ended) {\n      return;\n    }\n    if (!this.metadata) {\n      throw new Error('doPick called before start');\n    }\n    this.trace('Pick called');\n    const finalMetadata = this.metadata.clone();\n    const pickResult = this.channel.doPick(finalMetadata, this.callConfig.pickInformation);\n    const subchannelString = pickResult.subchannel ? '(' + pickResult.subchannel.getChannelzRef().id + ') ' + pickResult.subchannel.getAddress() : '' + pickResult.subchannel;\n    this.trace('Pick result: ' + picker_1.PickResultType[pickResult.pickResultType] + ' subchannel: ' + subchannelString + ' status: ' + ((_a = pickResult.status) === null || _a === void 0 ? void 0 : _a.code) + ' ' + ((_b = pickResult.status) === null || _b === void 0 ? void 0 : _b.details));\n    switch (pickResult.pickResultType) {\n      case picker_1.PickResultType.COMPLETE:\n        this.credentials.generateMetadata({\n          method_name: this.methodName,\n          service_url: this.serviceUrl\n        }).then(credsMetadata => {\n          var _a, _b, _c;\n          /* If this call was cancelled (e.g. by the deadline) before\n           * metadata generation finished, we shouldn't do anything with\n           * it. */\n          if (this.ended) {\n            this.trace('Credentials metadata generation finished after call ended');\n            return;\n          }\n          finalMetadata.merge(credsMetadata);\n          if (finalMetadata.get('authorization').length > 1) {\n            this.outputStatus({\n              code: constants_1.Status.INTERNAL,\n              details: '\"authorization\" metadata cannot have multiple values',\n              metadata: new metadata_1.Metadata()\n            }, 'PROCESSED');\n          }\n          if (pickResult.subchannel.getConnectivityState() !== connectivity_state_1.ConnectivityState.READY) {\n            this.trace('Picked subchannel ' + subchannelString + ' has state ' + connectivity_state_1.ConnectivityState[pickResult.subchannel.getConnectivityState()] + ' after getting credentials metadata. Retrying pick');\n            this.doPick();\n            return;\n          }\n          if (this.deadline !== Infinity) {\n            finalMetadata.set('grpc-timeout', (0, deadline_1.getDeadlineTimeoutString)(this.deadline));\n          }\n          try {\n            this.child = pickResult.subchannel.getRealSubchannel().createCall(finalMetadata, this.host, this.methodName, {\n              onReceiveMetadata: metadata => {\n                this.trace('Received metadata');\n                this.listener.onReceiveMetadata(metadata);\n              },\n              onReceiveMessage: message => {\n                this.trace('Received message');\n                this.listener.onReceiveMessage(message);\n              },\n              onReceiveStatus: status => {\n                this.trace('Received status');\n                if (status.rstCode === http2.constants.NGHTTP2_REFUSED_STREAM) {\n                  this.outputStatus(status, 'REFUSED');\n                } else {\n                  this.outputStatus(status, 'PROCESSED');\n                }\n              }\n            });\n            this.childStartTime = new Date();\n          } catch (error) {\n            this.trace('Failed to start call on picked subchannel ' + subchannelString + ' with error ' + error.message);\n            this.outputStatus({\n              code: constants_1.Status.INTERNAL,\n              details: 'Failed to start HTTP/2 stream with error ' + error.message,\n              metadata: new metadata_1.Metadata()\n            }, 'NOT_STARTED');\n            return;\n          }\n          (_b = (_a = this.callConfig).onCommitted) === null || _b === void 0 ? void 0 : _b.call(_a);\n          (_c = pickResult.onCallStarted) === null || _c === void 0 ? void 0 : _c.call(pickResult);\n          this.onCallEnded = pickResult.onCallEnded;\n          this.trace('Created child call [' + this.child.getCallNumber() + ']');\n          if (this.readPending) {\n            this.child.startRead();\n          }\n          if (this.pendingMessage) {\n            this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);\n          }\n          if (this.pendingHalfClose) {\n            this.child.halfClose();\n          }\n        }, error => {\n          // We assume the error code isn't 0 (Status.OK)\n          const {\n            code,\n            details\n          } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(typeof error.code === 'number' ? error.code : constants_1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${error.message}`);\n          this.outputStatus({\n            code: code,\n            details: details,\n            metadata: new metadata_1.Metadata()\n          }, 'PROCESSED');\n        });\n        break;\n      case picker_1.PickResultType.DROP:\n        const {\n          code,\n          details\n        } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n        setImmediate(() => {\n          this.outputStatus({\n            code,\n            details,\n            metadata: pickResult.status.metadata\n          }, 'DROP');\n        });\n        break;\n      case picker_1.PickResultType.TRANSIENT_FAILURE:\n        if (this.metadata.getOptions().waitForReady) {\n          this.channel.queueCallForPick(this);\n        } else {\n          const {\n            code,\n            details\n          } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n          setImmediate(() => {\n            this.outputStatus({\n              code,\n              details,\n              metadata: pickResult.status.metadata\n            }, 'PROCESSED');\n          });\n        }\n        break;\n      case picker_1.PickResultType.QUEUE:\n        this.channel.queueCallForPick(this);\n    }\n  }\n  cancelWithStatus(status, details) {\n    var _a;\n    this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n    (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n    this.outputStatus({\n      code: status,\n      details: details,\n      metadata: new metadata_1.Metadata()\n    }, 'PROCESSED');\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n  }\n  start(metadata, listener) {\n    this.trace('start called');\n    this.listener = listener;\n    this.metadata = metadata;\n    this.doPick();\n  }\n  sendMessageWithContext(context, message) {\n    this.trace('write() called with message of length ' + message.length);\n    if (this.child) {\n      this.child.sendMessageWithContext(context, message);\n    } else {\n      this.pendingMessage = {\n        context,\n        message\n      };\n    }\n  }\n  startRead() {\n    this.trace('startRead called');\n    if (this.child) {\n      this.child.startRead();\n    } else {\n      this.readPending = true;\n    }\n  }\n  halfClose() {\n    this.trace('halfClose called');\n    if (this.child) {\n      this.child.halfClose();\n    } else {\n      this.pendingHalfClose = true;\n    }\n  }\n  setCredentials(credentials) {\n    throw new Error('Method not implemented.');\n  }\n  getCallNumber() {\n    return this.callNumber;\n  }\n}\nexports.LoadBalancingCall = LoadBalancingCall;","map":{"version":3,"names":["require","connectivity_state_1","constants_1","deadline_1","metadata_1","picker_1","uri_parser_1","logging","control_plane_status_1","http2","TRACER_NAME","LoadBalancingCall","constructor","channel","callConfig","methodName","host","credentials","deadline","callNumber","child","readPending","pendingMessage","pendingHalfClose","ended","metadata","listener","onCallEnded","childStartTime","splitPath","split","serviceName","length","hostname","_b","_a","splitHostPort","serviceUrl","startTime","Date","getDeadlineInfo","deadlineInfo","getOptions","waitForReady","push","formatDateDifference","trace","text","LogVerbosity","DEBUG","outputStatus","status","progress","code","details","toISOString","finalStatus","Object","assign","onReceiveStatus","call","doPick","Error","finalMetadata","clone","pickResult","pickInformation","subchannelString","subchannel","getChannelzRef","id","getAddress","PickResultType","pickResultType","COMPLETE","generateMetadata","method_name","service_url","then","credsMetadata","merge","get","Status","INTERNAL","Metadata","getConnectivityState","ConnectivityState","READY","Infinity","set","getDeadlineTimeoutString","getRealSubchannel","createCall","onReceiveMetadata","onReceiveMessage","message","rstCode","constants","NGHTTP2_REFUSED_STREAM","error","onCommitted","_c","onCallStarted","getCallNumber","startRead","sendMessageWithContext","context","halfClose","restrictControlPlaneStatusCode","UNKNOWN","DROP","setImmediate","TRANSIENT_FAILURE","queueCallForPick","QUEUE","cancelWithStatus","getPeer","getTarget","start","setCredentials","exports"],"sources":["../../src/load-balancing-call.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}