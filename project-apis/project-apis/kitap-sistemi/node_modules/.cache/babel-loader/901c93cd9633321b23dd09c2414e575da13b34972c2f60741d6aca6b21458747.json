{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nrequire(\"core-js/modules/esnext.iterator.constructor.js\");\nrequire(\"core-js/modules/esnext.iterator.every.js\");\nrequire(\"core-js/modules/esnext.iterator.map.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CallCredentials = void 0;\nconst metadata_1 = require(\"./metadata\");\nfunction isCurrentOauth2Client(client) {\n  return 'getRequestHeaders' in client && typeof client.getRequestHeaders === 'function';\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nclass CallCredentials {\n  /**\n   * Creates a new CallCredentials object from a given function that generates\n   * Metadata objects.\n   * @param metadataGenerator A function that accepts a set of options, and\n   * generates a Metadata object based on these options, which is passed back\n   * to the caller via a supplied (err, metadata) callback.\n   */\n  static createFromMetadataGenerator(metadataGenerator) {\n    return new SingleCallCredentials(metadataGenerator);\n  }\n  /**\n   * Create a gRPC credential from a Google credential object.\n   * @param googleCredentials The authentication client to use.\n   * @return The resulting CallCredentials object.\n   */\n  static createFromGoogleCredential(googleCredentials) {\n    return CallCredentials.createFromMetadataGenerator((options, callback) => {\n      let getHeaders;\n      if (isCurrentOauth2Client(googleCredentials)) {\n        getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n      } else {\n        getHeaders = new Promise((resolve, reject) => {\n          googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n            if (err) {\n              reject(err);\n              return;\n            }\n            if (!headers) {\n              reject(new Error('Headers not set by metadata plugin'));\n              return;\n            }\n            resolve(headers);\n          });\n        });\n      }\n      getHeaders.then(headers => {\n        const metadata = new metadata_1.Metadata();\n        for (const key of Object.keys(headers)) {\n          metadata.add(key, headers[key]);\n        }\n        callback(null, metadata);\n      }, err => {\n        callback(err);\n      });\n    });\n  }\n  static createEmpty() {\n    return new EmptyCallCredentials();\n  }\n}\nexports.CallCredentials = CallCredentials;\nclass ComposedCallCredentials extends CallCredentials {\n  constructor(creds) {\n    super();\n    this.creds = creds;\n  }\n  async generateMetadata(options) {\n    const base = new metadata_1.Metadata();\n    const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n    for (const gen of generated) {\n      base.merge(gen);\n    }\n    return base;\n  }\n  compose(other) {\n    return new ComposedCallCredentials(this.creds.concat([other]));\n  }\n  _equals(other) {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof ComposedCallCredentials) {\n      return this.creds.every((value, index) => value._equals(other.creds[index]));\n    } else {\n      return false;\n    }\n  }\n}\nclass SingleCallCredentials extends CallCredentials {\n  constructor(metadataGenerator) {\n    super();\n    this.metadataGenerator = metadataGenerator;\n  }\n  generateMetadata(options) {\n    return new Promise((resolve, reject) => {\n      this.metadataGenerator(options, (err, metadata) => {\n        if (metadata !== undefined) {\n          resolve(metadata);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n  compose(other) {\n    return new ComposedCallCredentials([this, other]);\n  }\n  _equals(other) {\n    if (this === other) {\n      return true;\n    }\n    if (other instanceof SingleCallCredentials) {\n      return this.metadataGenerator === other.metadataGenerator;\n    } else {\n      return false;\n    }\n  }\n}\nclass EmptyCallCredentials extends CallCredentials {\n  generateMetadata(options) {\n    return Promise.resolve(new metadata_1.Metadata());\n  }\n  compose(other) {\n    return other;\n  }\n  _equals(other) {\n    return other instanceof EmptyCallCredentials;\n  }\n}","map":{"version":3,"names":["require","metadata_1","isCurrentOauth2Client","client","getRequestHeaders","CallCredentials","createFromMetadataGenerator","metadataGenerator","SingleCallCredentials","createFromGoogleCredential","googleCredentials","options","callback","getHeaders","service_url","Promise","resolve","reject","getRequestMetadata","err","headers","Error","then","metadata","Metadata","key","Object","keys","add","createEmpty","EmptyCallCredentials","exports","ComposedCallCredentials","constructor","creds","generateMetadata","base","generated","all","map","cred","gen","merge","compose","other","concat","_equals","every","value","index","undefined"],"sources":["../../src/call-credentials.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;;;;;AAiBA,MAAAC,UAAA,GAAAD,OAAA;AAgCA,SAASE,qBAAqBA,CAC5BC,MAAoB;EAEpB,OACE,mBAAmB,IAAIA,MAAM,IAC7B,OAAOA,MAAM,CAACC,iBAAiB,KAAK,UAAU;AAElD;AAEA;;;;AAIA,MAAsBC,eAAe;EAsBnC;;;;;;;EAOA,OAAOC,2BAA2BA,CAChCC,iBAAwC;IAExC,OAAO,IAAIC,qBAAqB,CAACD,iBAAiB,CAAC;EACrD;EAEA;;;;;EAKA,OAAOE,0BAA0BA,CAC/BC,iBAA+B;IAE/B,OAAOL,eAAe,CAACC,2BAA2B,CAAC,CAACK,OAAO,EAAEC,QAAQ,KAAI;MACvE,IAAIC,UAAgD;MACpD,IAAIX,qBAAqB,CAACQ,iBAAiB,CAAC,EAAE;QAC5CG,UAAU,GAAGH,iBAAiB,CAACN,iBAAiB,CAACO,OAAO,CAACG,WAAW,CAAC;MACvE,CAAC,MAAM;QACLD,UAAU,GAAG,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;UAC3CP,iBAAiB,CAACQ,kBAAkB,CAClCP,OAAO,CAACG,WAAW,EACnB,CAACK,GAAG,EAAEC,OAAO,KAAI;YACf,IAAID,GAAG,EAAE;cACPF,MAAM,CAACE,GAAG,CAAC;cACX;YACF;YACA,IAAI,CAACC,OAAO,EAAE;cACZH,MAAM,CAAC,IAAII,KAAK,CAAC,oCAAoC,CAAC,CAAC;cACvD;YACF;YACAL,OAAO,CAACI,OAAO,CAAC;UAClB,CAAC,CACF;QACH,CAAC,CAAC;MACJ;MACAP,UAAU,CAACS,IAAI,CACbF,OAAO,IAAG;QACR,MAAMG,QAAQ,GAAG,IAAItB,UAAA,CAAAuB,QAAQ,EAAE;QAC/B,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,EAAE;UACtCG,QAAQ,CAACK,GAAG,CAACH,GAAG,EAAEL,OAAO,CAACK,GAAG,CAAC,CAAC;QACjC;QACAb,QAAQ,CAAC,IAAI,EAAEW,QAAQ,CAAC;MAC1B,CAAC,EACDJ,GAAG,IAAG;QACJP,QAAQ,CAACO,GAAG,CAAC;MACf,CAAC,CACF;IACH,CAAC,CAAC;EACJ;EAEA,OAAOU,WAAWA,CAAA;IAChB,OAAO,IAAIC,oBAAoB,EAAE;EACnC;;AAlFFC,OAAA,CAAA1B,eAAA,GAAAA,eAAA;AAqFA,MAAM2B,uBAAwB,SAAQ3B,eAAe;EACnD4B,YAAoBC,KAAwB;IAC1C,KAAK,EAAE;IADW,KAAAA,KAAK,GAALA,KAAK;EAEzB;EAEA,MAAMC,gBAAgBA,CAACxB,OAA4B;IACjD,MAAMyB,IAAI,GAAa,IAAInC,UAAA,CAAAuB,QAAQ,EAAE;IACrC,MAAMa,SAAS,GAAe,MAAMtB,OAAO,CAACuB,GAAG,CAC7C,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACL,gBAAgB,CAACxB,OAAO,CAAC,CAAC,CACvD;IACD,KAAK,MAAM8B,GAAG,IAAIJ,SAAS,EAAE;MAC3BD,IAAI,CAACM,KAAK,CAACD,GAAG,CAAC;IACjB;IACA,OAAOL,IAAI;EACb;EAEAO,OAAOA,CAACC,KAAsB;IAC5B,OAAO,IAAIZ,uBAAuB,CAAC,IAAI,CAACE,KAAK,CAACW,MAAM,CAAC,CAACD,KAAK,CAAC,CAAC,CAAC;EAChE;EAEAE,OAAOA,CAACF,KAAsB;IAC5B,IAAI,IAAI,KAAKA,KAAK,EAAE;MAClB,OAAO,IAAI;IACb;IACA,IAAIA,KAAK,YAAYZ,uBAAuB,EAAE;MAC5C,OAAO,IAAI,CAACE,KAAK,CAACa,KAAK,CAAC,CAACC,KAAK,EAAEC,KAAK,KACnCD,KAAK,CAACF,OAAO,CAACF,KAAK,CAACV,KAAK,CAACe,KAAK,CAAC,CAAC,CAClC;IACH,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;;AAGF,MAAMzC,qBAAsB,SAAQH,eAAe;EACjD4B,YAAoB1B,iBAAwC;IAC1D,KAAK,EAAE;IADW,KAAAA,iBAAiB,GAAjBA,iBAAiB;EAErC;EAEA4B,gBAAgBA,CAACxB,OAA4B;IAC3C,OAAO,IAAII,OAAO,CAAW,CAACC,OAAO,EAAEC,MAAM,KAAI;MAC/C,IAAI,CAACV,iBAAiB,CAACI,OAAO,EAAE,CAACQ,GAAG,EAAEI,QAAQ,KAAI;QAChD,IAAIA,QAAQ,KAAK2B,SAAS,EAAE;UAC1BlC,OAAO,CAACO,QAAQ,CAAC;QACnB,CAAC,MAAM;UACLN,MAAM,CAACE,GAAG,CAAC;QACb;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAwB,OAAOA,CAACC,KAAsB;IAC5B,OAAO,IAAIZ,uBAAuB,CAAC,CAAC,IAAI,EAAEY,KAAK,CAAC,CAAC;EACnD;EAEAE,OAAOA,CAACF,KAAsB;IAC5B,IAAI,IAAI,KAAKA,KAAK,EAAE;MAClB,OAAO,IAAI;IACb;IACA,IAAIA,KAAK,YAAYpC,qBAAqB,EAAE;MAC1C,OAAO,IAAI,CAACD,iBAAiB,KAAKqC,KAAK,CAACrC,iBAAiB;IAC3D,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;;AAGF,MAAMuB,oBAAqB,SAAQzB,eAAe;EAChD8B,gBAAgBA,CAACxB,OAA4B;IAC3C,OAAOI,OAAO,CAACC,OAAO,CAAC,IAAIf,UAAA,CAAAuB,QAAQ,EAAE,CAAC;EACxC;EAEAmB,OAAOA,CAACC,KAAsB;IAC5B,OAAOA,KAAK;EACd;EAEAE,OAAOA,CAACF,KAAsB;IAC5B,OAAOA,KAAK,YAAYd,oBAAoB;EAC9C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}